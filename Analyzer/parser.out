Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> initial
Rule 1     initial -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> impresion PTCOMA
Rule 5     instruccion -> expresionL
Rule 6     instruccion -> ciclo PTCOMA
Rule 7     instruccion -> asignacion PTCOMA
Rule 8     instruccion -> DecFunc PTCOMA
Rule 9     instruccion -> callFunc PTCOMA
Rule 10    instruccion -> empty
Rule 11    DecFunc -> RFUNCTION ID PARIZQ Parametros PARDER block REND
Rule 12    DecFunc -> RFUNCTION ID PARIZQ PARDER block REND
Rule 13    Parametros -> Parametros COMA Parametro
Rule 14    Parametros -> Parametro
Rule 15    Parametro -> ID FPTS Tipo
Rule 16    Parametro -> ID
Rule 17    callFunc -> ID ParametrosFunc
Rule 18    ParametrosFunc -> PARIZQ lstVal PARDER
Rule 19    ParametrosFunc -> PARIZQ PARDER
Rule 20    lstVal -> lstVal COMA expresionL
Rule 21    lstVal -> expresionL
Rule 22    ciclo -> whileSt
Rule 23    whileSt -> RWHILE expresionL block REND
Rule 24    block -> instrucciones
Rule 25    asignacion -> TipoVarible ID asingArray IGUAL expresionL Final
Rule 26    asignacion -> ID asingArray IGUAL expresionL Final
Rule 27    TipoVarible -> RGLOBAL
Rule 28    TipoVarible -> RLOCAL
Rule 29    asingArray -> asingArray PARIZQ ENTERO PARDER
Rule 30    asingArray -> empty
Rule 31    Final -> FPTS Tipo
Rule 32    Final -> empty
Rule 33    Tipo -> RINT
Rule 34    Tipo -> RFLOAT
Rule 35    Tipo -> RBOOL
Rule 36    Tipo -> RCHAR
Rule 37    Tipo -> RSTRING
Rule 38    impresion -> IPRINT PARIZQ val PARDER
Rule 39    impresion -> IPRINTLN PARIZQ val PARDER
Rule 40    val -> val COMA val
Rule 41    val -> expresionL
Rule 42    expresionL -> expresionL AND expresionL
Rule 43    expresionL -> expresionL OR expresionL
Rule 44    expresionL -> NOT expresionL
Rule 45    expresionL -> PARIZQ expresionL PARDER
Rule 46    expresionL -> expresionR
Rule 47    expresionR -> expresionR MAYOR expresionR
Rule 48    expresionR -> expresionR MENOR expresionR
Rule 49    expresionR -> expresionR MAYORIGUAL expresionR
Rule 50    expresionR -> expresionR MENORIGUAL expresionR
Rule 51    expresionR -> expresionR IGUALIGUAL expresionR
Rule 52    expresionR -> expresionR NOIGUAL expresionR
Rule 53    expresionR -> PARIZQ expresionR PARDER
Rule 54    expresionR -> booleano
Rule 55    expresionR -> expresion
Rule 56    expresion -> expresion MAS expresion
Rule 57    expresion -> expresion MENOS expresion
Rule 58    expresion -> expresion DIVIDIDO expresion
Rule 59    expresion -> expresion POR expresion
Rule 60    expresion -> expresion POW expresion
Rule 61    expresion -> expresion MOD expresion
Rule 62    expresion -> MENOS expresion
Rule 63    expresion -> PARIZQ expresion PARDER
Rule 64    expresion -> valor
Rule 65    booleano -> VERDADERO
Rule 66    booleano -> FALSO
Rule 67    valor -> ENTERO
Rule 68    valor -> DECIMAL
Rule 69    valor -> CHAR
Rule 70    valor -> cadena
Rule 71    valor -> nativas
Rule 72    valor -> ID
Rule 73    empty -> <empty>
Rule 74    nativas -> ILOGD PARIZQ expresion PARDER
Rule 75    nativas -> ILOG PARIZQ expresion COMA expresion PARDER
Rule 76    nativas -> ISIN PARIZQ expresion PARDER
Rule 77    nativas -> ICOS PARIZQ expresion PARDER
Rule 78    nativas -> ITAN PARIZQ expresion PARDER
Rule 79    nativas -> ISQRT PARIZQ expresion PARDER
Rule 80    nativas -> casteo
Rule 81    casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER
Rule 82    casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER
Rule 83    casteo -> RTYPEOF PARIZQ expresionL PARDER
Rule 84    casteo -> ISTRING PARIZQ expresionL PARDER
Rule 85    casteo -> RFLOATC PARIZQ expresionL PARDER
Rule 86    cadena -> IUPPERCASE PARIZQ expresion PARDER
Rule 87    cadena -> ILOWERCASE PARIZQ expresion PARDER
Rule 88    cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER
Rule 89    cadena -> STRING

Terminals, with rules where they appear

AND                  : 42
CHAR                 : 69
COMA                 : 13 20 40 75 81 82 88
DECIMAL              : 68
DIVIDIDO             : 58
ENTERO               : 29 67
FALSO                : 66
FPTS                 : 15 31
ICOS                 : 77
ID                   : 11 12 15 16 17 25 26 72
IGUAL                : 25 26
IGUALIGUAL           : 51
ILOG                 : 75
ILOGD                : 74
ILOWERCASE           : 87
IPARSE               : 81 88
IPRINT               : 38
IPRINTLN             : 39
ISIN                 : 76
ISQRT                : 79
ISTRING              : 84 88
ITAN                 : 78
IUPPERCASE           : 86
MAS                  : 56
MAYOR                : 47
MAYORIGUAL           : 49
MENOR                : 48
MENORIGUAL           : 50
MENOS                : 57 62
MOD                  : 61
NOIGUAL              : 52
NOT                  : 44
OR                   : 43
PARDER               : 11 12 18 19 29 38 39 45 53 63 74 75 76 77 78 79 81 82 83 84 85 86 87 88
PARIZQ               : 11 12 18 19 29 38 39 45 53 63 74 75 76 77 78 79 81 82 83 84 85 86 87 88
POR                  : 59
POW                  : 60
PTCOMA               : 4 6 7 8 9
RBOOL                : 35
RCHAR                : 36
REND                 : 11 12 23
RFLOAT               : 34
RFLOATC              : 85
RFUNCTION            : 11 12
RGLOBAL              : 27
RINT                 : 33 82
RLOCAL               : 28
RSTRING              : 37
RTRUNC               : 82
RTYPEOF              : 83
RWHILE               : 23
STRING               : 89
VERDADERO            : 65
error                : 

Nonterminals, with rules where they appear

DecFunc              : 8
Final                : 25 26
Parametro            : 13 14
Parametros           : 11 13
ParametrosFunc       : 17
Tipo                 : 15 31 81
TipoVarible          : 25
asignacion           : 7
asingArray           : 25 26 29
block                : 11 12 23
booleano             : 54
cadena               : 70
callFunc             : 9
casteo               : 80
ciclo                : 6
empty                : 10 30 32
expresion            : 55 56 56 57 57 58 58 59 59 60 60 61 61 62 63 74 75 75 76 77 78 79 86 87
expresionL           : 5 20 21 23 25 26 41 42 42 43 43 44 45 81 82 83 84 85 88
expresionR           : 46 47 47 48 48 49 49 50 50 51 51 52 52 53
impresion            : 4
initial              : 0
instruccion          : 2 3
instrucciones        : 1 2 24
lstVal               : 18 20
nativas              : 71
val                  : 38 39 40 40
valor                : 64
whileSt              : 22

Parsing method: LALR

state 0

    (0) S' -> . initial
    (1) initial -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . impresion PTCOMA
    (5) instruccion -> . expresionL
    (6) instruccion -> . ciclo PTCOMA
    (7) instruccion -> . asignacion PTCOMA
    (8) instruccion -> . DecFunc PTCOMA
    (9) instruccion -> . callFunc PTCOMA
    (10) instruccion -> . empty
    (38) impresion -> . IPRINT PARIZQ val PARDER
    (39) impresion -> . IPRINTLN PARIZQ val PARDER
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (22) ciclo -> . whileSt
    (25) asignacion -> . TipoVarible ID asingArray IGUAL expresionL Final
    (26) asignacion -> . ID asingArray IGUAL expresionL Final
    (11) DecFunc -> . RFUNCTION ID PARIZQ Parametros PARDER block REND
    (12) DecFunc -> . RFUNCTION ID PARIZQ PARDER block REND
    (17) callFunc -> . ID ParametrosFunc
    (73) empty -> .
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (23) whileSt -> . RWHILE expresionL block REND
    (27) TipoVarible -> . RGLOBAL
    (28) TipoVarible -> . RLOCAL
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

  ! shift/reduce conflict for IPRINT resolved as shift
  ! shift/reduce conflict for IPRINTLN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RFUNCTION resolved as shift
  ! shift/reduce conflict for RWHILE resolved as shift
  ! shift/reduce conflict for RGLOBAL resolved as shift
  ! shift/reduce conflict for RLOCAL resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for IUPPERCASE resolved as shift
  ! shift/reduce conflict for ILOWERCASE resolved as shift
  ! shift/reduce conflict for IPARSE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ILOGD resolved as shift
  ! shift/reduce conflict for ILOG resolved as shift
  ! shift/reduce conflict for ISIN resolved as shift
  ! shift/reduce conflict for ICOS resolved as shift
  ! shift/reduce conflict for ITAN resolved as shift
  ! shift/reduce conflict for ISQRT resolved as shift
  ! shift/reduce conflict for RTRUNC resolved as shift
  ! shift/reduce conflict for RTYPEOF resolved as shift
  ! shift/reduce conflict for ISTRING resolved as shift
  ! shift/reduce conflict for RFLOATC resolved as shift
    IPRINT          shift and go to state 11
    IPRINTLN        shift and go to state 13
    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    ID              shift and go to state 18
    RFUNCTION       shift and go to state 19
    $end            reduce using rule 73 (empty -> .)
    RWHILE          shift and go to state 22
    RGLOBAL         shift and go to state 23
    RLOCAL          shift and go to state 24
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

  ! IPRINT          [ reduce using rule 73 (empty -> .) ]
  ! IPRINTLN        [ reduce using rule 73 (empty -> .) ]
  ! NOT             [ reduce using rule 73 (empty -> .) ]
  ! PARIZQ          [ reduce using rule 73 (empty -> .) ]
  ! ID              [ reduce using rule 73 (empty -> .) ]
  ! RFUNCTION       [ reduce using rule 73 (empty -> .) ]
  ! RWHILE          [ reduce using rule 73 (empty -> .) ]
  ! RGLOBAL         [ reduce using rule 73 (empty -> .) ]
  ! RLOCAL          [ reduce using rule 73 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 73 (empty -> .) ]
  ! FALSO           [ reduce using rule 73 (empty -> .) ]
  ! MENOS           [ reduce using rule 73 (empty -> .) ]
  ! ENTERO          [ reduce using rule 73 (empty -> .) ]
  ! DECIMAL         [ reduce using rule 73 (empty -> .) ]
  ! CHAR            [ reduce using rule 73 (empty -> .) ]
  ! IUPPERCASE      [ reduce using rule 73 (empty -> .) ]
  ! ILOWERCASE      [ reduce using rule 73 (empty -> .) ]
  ! IPARSE          [ reduce using rule 73 (empty -> .) ]
  ! STRING          [ reduce using rule 73 (empty -> .) ]
  ! ILOGD           [ reduce using rule 73 (empty -> .) ]
  ! ILOG            [ reduce using rule 73 (empty -> .) ]
  ! ISIN            [ reduce using rule 73 (empty -> .) ]
  ! ICOS            [ reduce using rule 73 (empty -> .) ]
  ! ITAN            [ reduce using rule 73 (empty -> .) ]
  ! ISQRT           [ reduce using rule 73 (empty -> .) ]
  ! RTRUNC          [ reduce using rule 73 (empty -> .) ]
  ! RTYPEOF         [ reduce using rule 73 (empty -> .) ]
  ! ISTRING         [ reduce using rule 73 (empty -> .) ]
  ! RFLOATC         [ reduce using rule 73 (empty -> .) ]

    initial                        shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    impresion                      shift and go to state 4
    expresionL                     shift and go to state 5
    ciclo                          shift and go to state 6
    asignacion                     shift and go to state 7
    DecFunc                        shift and go to state 8
    callFunc                       shift and go to state 9
    empty                          shift and go to state 10
    expresionR                     shift and go to state 15
    whileSt                        shift and go to state 16
    TipoVarible                    shift and go to state 17
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 1

    (0) S' -> initial .



state 2

    (1) initial -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . impresion PTCOMA
    (5) instruccion -> . expresionL
    (6) instruccion -> . ciclo PTCOMA
    (7) instruccion -> . asignacion PTCOMA
    (8) instruccion -> . DecFunc PTCOMA
    (9) instruccion -> . callFunc PTCOMA
    (10) instruccion -> . empty
    (38) impresion -> . IPRINT PARIZQ val PARDER
    (39) impresion -> . IPRINTLN PARIZQ val PARDER
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (22) ciclo -> . whileSt
    (25) asignacion -> . TipoVarible ID asingArray IGUAL expresionL Final
    (26) asignacion -> . ID asingArray IGUAL expresionL Final
    (11) DecFunc -> . RFUNCTION ID PARIZQ Parametros PARDER block REND
    (12) DecFunc -> . RFUNCTION ID PARIZQ PARDER block REND
    (17) callFunc -> . ID ParametrosFunc
    (73) empty -> .
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (23) whileSt -> . RWHILE expresionL block REND
    (27) TipoVarible -> . RGLOBAL
    (28) TipoVarible -> . RLOCAL
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

  ! shift/reduce conflict for IPRINT resolved as shift
  ! shift/reduce conflict for IPRINTLN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RFUNCTION resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 1 (initial -> instrucciones .)
  ! shift/reduce conflict for RWHILE resolved as shift
  ! shift/reduce conflict for RGLOBAL resolved as shift
  ! shift/reduce conflict for RLOCAL resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for IUPPERCASE resolved as shift
  ! shift/reduce conflict for ILOWERCASE resolved as shift
  ! shift/reduce conflict for IPARSE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ILOGD resolved as shift
  ! shift/reduce conflict for ILOG resolved as shift
  ! shift/reduce conflict for ISIN resolved as shift
  ! shift/reduce conflict for ICOS resolved as shift
  ! shift/reduce conflict for ITAN resolved as shift
  ! shift/reduce conflict for ISQRT resolved as shift
  ! shift/reduce conflict for RTRUNC resolved as shift
  ! shift/reduce conflict for RTYPEOF resolved as shift
  ! shift/reduce conflict for ISTRING resolved as shift
  ! shift/reduce conflict for RFLOATC resolved as shift
    $end            reduce using rule 1 (initial -> instrucciones .)
    IPRINT          shift and go to state 11
    IPRINTLN        shift and go to state 13
    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    ID              shift and go to state 18
    RFUNCTION       shift and go to state 19
    RWHILE          shift and go to state 22
    RGLOBAL         shift and go to state 23
    RLOCAL          shift and go to state 24
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

  ! IPRINT          [ reduce using rule 73 (empty -> .) ]
  ! IPRINTLN        [ reduce using rule 73 (empty -> .) ]
  ! NOT             [ reduce using rule 73 (empty -> .) ]
  ! PARIZQ          [ reduce using rule 73 (empty -> .) ]
  ! ID              [ reduce using rule 73 (empty -> .) ]
  ! RFUNCTION       [ reduce using rule 73 (empty -> .) ]
  ! RWHILE          [ reduce using rule 73 (empty -> .) ]
  ! RGLOBAL         [ reduce using rule 73 (empty -> .) ]
  ! RLOCAL          [ reduce using rule 73 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 73 (empty -> .) ]
  ! FALSO           [ reduce using rule 73 (empty -> .) ]
  ! MENOS           [ reduce using rule 73 (empty -> .) ]
  ! ENTERO          [ reduce using rule 73 (empty -> .) ]
  ! DECIMAL         [ reduce using rule 73 (empty -> .) ]
  ! CHAR            [ reduce using rule 73 (empty -> .) ]
  ! IUPPERCASE      [ reduce using rule 73 (empty -> .) ]
  ! ILOWERCASE      [ reduce using rule 73 (empty -> .) ]
  ! IPARSE          [ reduce using rule 73 (empty -> .) ]
  ! STRING          [ reduce using rule 73 (empty -> .) ]
  ! ILOGD           [ reduce using rule 73 (empty -> .) ]
  ! ILOG            [ reduce using rule 73 (empty -> .) ]
  ! ISIN            [ reduce using rule 73 (empty -> .) ]
  ! ICOS            [ reduce using rule 73 (empty -> .) ]
  ! ITAN            [ reduce using rule 73 (empty -> .) ]
  ! ISQRT           [ reduce using rule 73 (empty -> .) ]
  ! RTRUNC          [ reduce using rule 73 (empty -> .) ]
  ! RTYPEOF         [ reduce using rule 73 (empty -> .) ]
  ! ISTRING         [ reduce using rule 73 (empty -> .) ]
  ! RFLOATC         [ reduce using rule 73 (empty -> .) ]
  ! $end            [ reduce using rule 73 (empty -> .) ]

    instruccion                    shift and go to state 49
    impresion                      shift and go to state 4
    expresionL                     shift and go to state 5
    ciclo                          shift and go to state 6
    asignacion                     shift and go to state 7
    DecFunc                        shift and go to state 8
    callFunc                       shift and go to state 9
    empty                          shift and go to state 10
    expresionR                     shift and go to state 15
    whileSt                        shift and go to state 16
    TipoVarible                    shift and go to state 17
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 3

    (3) instrucciones -> instruccion .

    IPRINT          reduce using rule 3 (instrucciones -> instruccion .)
    IPRINTLN        reduce using rule 3 (instrucciones -> instruccion .)
    NOT             reduce using rule 3 (instrucciones -> instruccion .)
    PARIZQ          reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    RFUNCTION       reduce using rule 3 (instrucciones -> instruccion .)
    RWHILE          reduce using rule 3 (instrucciones -> instruccion .)
    RGLOBAL         reduce using rule 3 (instrucciones -> instruccion .)
    RLOCAL          reduce using rule 3 (instrucciones -> instruccion .)
    VERDADERO       reduce using rule 3 (instrucciones -> instruccion .)
    FALSO           reduce using rule 3 (instrucciones -> instruccion .)
    MENOS           reduce using rule 3 (instrucciones -> instruccion .)
    ENTERO          reduce using rule 3 (instrucciones -> instruccion .)
    DECIMAL         reduce using rule 3 (instrucciones -> instruccion .)
    CHAR            reduce using rule 3 (instrucciones -> instruccion .)
    IUPPERCASE      reduce using rule 3 (instrucciones -> instruccion .)
    ILOWERCASE      reduce using rule 3 (instrucciones -> instruccion .)
    IPARSE          reduce using rule 3 (instrucciones -> instruccion .)
    STRING          reduce using rule 3 (instrucciones -> instruccion .)
    ILOGD           reduce using rule 3 (instrucciones -> instruccion .)
    ILOG            reduce using rule 3 (instrucciones -> instruccion .)
    ISIN            reduce using rule 3 (instrucciones -> instruccion .)
    ICOS            reduce using rule 3 (instrucciones -> instruccion .)
    ITAN            reduce using rule 3 (instrucciones -> instruccion .)
    ISQRT           reduce using rule 3 (instrucciones -> instruccion .)
    RTRUNC          reduce using rule 3 (instrucciones -> instruccion .)
    RTYPEOF         reduce using rule 3 (instrucciones -> instruccion .)
    ISTRING         reduce using rule 3 (instrucciones -> instruccion .)
    RFLOATC         reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    REND            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> impresion . PTCOMA

    PTCOMA          shift and go to state 50


state 5

    (5) instruccion -> expresionL .
    (42) expresionL -> expresionL . AND expresionL
    (43) expresionL -> expresionL . OR expresionL

    IPRINT          reduce using rule 5 (instruccion -> expresionL .)
    IPRINTLN        reduce using rule 5 (instruccion -> expresionL .)
    NOT             reduce using rule 5 (instruccion -> expresionL .)
    PARIZQ          reduce using rule 5 (instruccion -> expresionL .)
    ID              reduce using rule 5 (instruccion -> expresionL .)
    RFUNCTION       reduce using rule 5 (instruccion -> expresionL .)
    RWHILE          reduce using rule 5 (instruccion -> expresionL .)
    RGLOBAL         reduce using rule 5 (instruccion -> expresionL .)
    RLOCAL          reduce using rule 5 (instruccion -> expresionL .)
    VERDADERO       reduce using rule 5 (instruccion -> expresionL .)
    FALSO           reduce using rule 5 (instruccion -> expresionL .)
    MENOS           reduce using rule 5 (instruccion -> expresionL .)
    ENTERO          reduce using rule 5 (instruccion -> expresionL .)
    DECIMAL         reduce using rule 5 (instruccion -> expresionL .)
    CHAR            reduce using rule 5 (instruccion -> expresionL .)
    IUPPERCASE      reduce using rule 5 (instruccion -> expresionL .)
    ILOWERCASE      reduce using rule 5 (instruccion -> expresionL .)
    IPARSE          reduce using rule 5 (instruccion -> expresionL .)
    STRING          reduce using rule 5 (instruccion -> expresionL .)
    ILOGD           reduce using rule 5 (instruccion -> expresionL .)
    ILOG            reduce using rule 5 (instruccion -> expresionL .)
    ISIN            reduce using rule 5 (instruccion -> expresionL .)
    ICOS            reduce using rule 5 (instruccion -> expresionL .)
    ITAN            reduce using rule 5 (instruccion -> expresionL .)
    ISQRT           reduce using rule 5 (instruccion -> expresionL .)
    RTRUNC          reduce using rule 5 (instruccion -> expresionL .)
    RTYPEOF         reduce using rule 5 (instruccion -> expresionL .)
    ISTRING         reduce using rule 5 (instruccion -> expresionL .)
    RFLOATC         reduce using rule 5 (instruccion -> expresionL .)
    $end            reduce using rule 5 (instruccion -> expresionL .)
    REND            reduce using rule 5 (instruccion -> expresionL .)
    AND             shift and go to state 51
    OR              shift and go to state 52


state 6

    (6) instruccion -> ciclo . PTCOMA

    PTCOMA          shift and go to state 53


state 7

    (7) instruccion -> asignacion . PTCOMA

    PTCOMA          shift and go to state 54


state 8

    (8) instruccion -> DecFunc . PTCOMA

    PTCOMA          shift and go to state 55


state 9

    (9) instruccion -> callFunc . PTCOMA

    PTCOMA          shift and go to state 56


state 10

    (10) instruccion -> empty .

    IPRINT          reduce using rule 10 (instruccion -> empty .)
    IPRINTLN        reduce using rule 10 (instruccion -> empty .)
    NOT             reduce using rule 10 (instruccion -> empty .)
    PARIZQ          reduce using rule 10 (instruccion -> empty .)
    ID              reduce using rule 10 (instruccion -> empty .)
    RFUNCTION       reduce using rule 10 (instruccion -> empty .)
    RWHILE          reduce using rule 10 (instruccion -> empty .)
    RGLOBAL         reduce using rule 10 (instruccion -> empty .)
    RLOCAL          reduce using rule 10 (instruccion -> empty .)
    VERDADERO       reduce using rule 10 (instruccion -> empty .)
    FALSO           reduce using rule 10 (instruccion -> empty .)
    MENOS           reduce using rule 10 (instruccion -> empty .)
    ENTERO          reduce using rule 10 (instruccion -> empty .)
    DECIMAL         reduce using rule 10 (instruccion -> empty .)
    CHAR            reduce using rule 10 (instruccion -> empty .)
    IUPPERCASE      reduce using rule 10 (instruccion -> empty .)
    ILOWERCASE      reduce using rule 10 (instruccion -> empty .)
    IPARSE          reduce using rule 10 (instruccion -> empty .)
    STRING          reduce using rule 10 (instruccion -> empty .)
    ILOGD           reduce using rule 10 (instruccion -> empty .)
    ILOG            reduce using rule 10 (instruccion -> empty .)
    ISIN            reduce using rule 10 (instruccion -> empty .)
    ICOS            reduce using rule 10 (instruccion -> empty .)
    ITAN            reduce using rule 10 (instruccion -> empty .)
    ISQRT           reduce using rule 10 (instruccion -> empty .)
    RTRUNC          reduce using rule 10 (instruccion -> empty .)
    RTYPEOF         reduce using rule 10 (instruccion -> empty .)
    ISTRING         reduce using rule 10 (instruccion -> empty .)
    RFLOATC         reduce using rule 10 (instruccion -> empty .)
    $end            reduce using rule 10 (instruccion -> empty .)
    REND            reduce using rule 10 (instruccion -> empty .)


state 11

    (38) impresion -> IPRINT . PARIZQ val PARDER

    PARIZQ          shift and go to state 57


state 12

    (45) expresionL -> PARIZQ . expresionL PARDER
    (53) expresionR -> PARIZQ . expresionR PARDER
    (63) expresion -> PARIZQ . expresion PARDER
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    MENOS           shift and go to state 27
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresionL                     shift and go to state 58
    expresionR                     shift and go to state 59
    expresion                      shift and go to state 60
    booleano                       shift and go to state 20
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 13

    (39) impresion -> IPRINTLN . PARIZQ val PARDER

    PARIZQ          shift and go to state 62


state 14

    (44) expresionL -> NOT . expresionL
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresionL                     shift and go to state 63
    expresionR                     shift and go to state 15
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 15

    (46) expresionL -> expresionR .
    (47) expresionR -> expresionR . MAYOR expresionR
    (48) expresionR -> expresionR . MENOR expresionR
    (49) expresionR -> expresionR . MAYORIGUAL expresionR
    (50) expresionR -> expresionR . MENORIGUAL expresionR
    (51) expresionR -> expresionR . IGUALIGUAL expresionR
    (52) expresionR -> expresionR . NOIGUAL expresionR

    AND             reduce using rule 46 (expresionL -> expresionR .)
    OR              reduce using rule 46 (expresionL -> expresionR .)
    IPRINT          reduce using rule 46 (expresionL -> expresionR .)
    IPRINTLN        reduce using rule 46 (expresionL -> expresionR .)
    NOT             reduce using rule 46 (expresionL -> expresionR .)
    PARIZQ          reduce using rule 46 (expresionL -> expresionR .)
    ID              reduce using rule 46 (expresionL -> expresionR .)
    RFUNCTION       reduce using rule 46 (expresionL -> expresionR .)
    RWHILE          reduce using rule 46 (expresionL -> expresionR .)
    RGLOBAL         reduce using rule 46 (expresionL -> expresionR .)
    RLOCAL          reduce using rule 46 (expresionL -> expresionR .)
    VERDADERO       reduce using rule 46 (expresionL -> expresionR .)
    FALSO           reduce using rule 46 (expresionL -> expresionR .)
    MENOS           reduce using rule 46 (expresionL -> expresionR .)
    ENTERO          reduce using rule 46 (expresionL -> expresionR .)
    DECIMAL         reduce using rule 46 (expresionL -> expresionR .)
    CHAR            reduce using rule 46 (expresionL -> expresionR .)
    IUPPERCASE      reduce using rule 46 (expresionL -> expresionR .)
    ILOWERCASE      reduce using rule 46 (expresionL -> expresionR .)
    IPARSE          reduce using rule 46 (expresionL -> expresionR .)
    STRING          reduce using rule 46 (expresionL -> expresionR .)
    ILOGD           reduce using rule 46 (expresionL -> expresionR .)
    ILOG            reduce using rule 46 (expresionL -> expresionR .)
    ISIN            reduce using rule 46 (expresionL -> expresionR .)
    ICOS            reduce using rule 46 (expresionL -> expresionR .)
    ITAN            reduce using rule 46 (expresionL -> expresionR .)
    ISQRT           reduce using rule 46 (expresionL -> expresionR .)
    RTRUNC          reduce using rule 46 (expresionL -> expresionR .)
    RTYPEOF         reduce using rule 46 (expresionL -> expresionR .)
    ISTRING         reduce using rule 46 (expresionL -> expresionR .)
    RFLOATC         reduce using rule 46 (expresionL -> expresionR .)
    $end            reduce using rule 46 (expresionL -> expresionR .)
    PARDER          reduce using rule 46 (expresionL -> expresionR .)
    REND            reduce using rule 46 (expresionL -> expresionR .)
    COMA            reduce using rule 46 (expresionL -> expresionR .)
    FPTS            reduce using rule 46 (expresionL -> expresionR .)
    PTCOMA          reduce using rule 46 (expresionL -> expresionR .)
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALIGUAL      shift and go to state 68
    NOIGUAL         shift and go to state 69


state 16

    (22) ciclo -> whileSt .

    PTCOMA          reduce using rule 22 (ciclo -> whileSt .)


state 17

    (25) asignacion -> TipoVarible . ID asingArray IGUAL expresionL Final

    ID              shift and go to state 70


state 18

    (26) asignacion -> ID . asingArray IGUAL expresionL Final
    (17) callFunc -> ID . ParametrosFunc
    (72) valor -> ID .
    (29) asingArray -> . asingArray PARIZQ ENTERO PARDER
    (30) asingArray -> . empty
    (18) ParametrosFunc -> . PARIZQ lstVal PARDER
    (19) ParametrosFunc -> . PARIZQ PARDER
    (73) empty -> .

  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
    MAS             reduce using rule 72 (valor -> ID .)
    MENOS           reduce using rule 72 (valor -> ID .)
    DIVIDIDO        reduce using rule 72 (valor -> ID .)
    POR             reduce using rule 72 (valor -> ID .)
    POW             reduce using rule 72 (valor -> ID .)
    MOD             reduce using rule 72 (valor -> ID .)
    MAYOR           reduce using rule 72 (valor -> ID .)
    MENOR           reduce using rule 72 (valor -> ID .)
    MAYORIGUAL      reduce using rule 72 (valor -> ID .)
    MENORIGUAL      reduce using rule 72 (valor -> ID .)
    IGUALIGUAL      reduce using rule 72 (valor -> ID .)
    NOIGUAL         reduce using rule 72 (valor -> ID .)
    AND             reduce using rule 72 (valor -> ID .)
    OR              reduce using rule 72 (valor -> ID .)
    IPRINT          reduce using rule 72 (valor -> ID .)
    IPRINTLN        reduce using rule 72 (valor -> ID .)
    NOT             reduce using rule 72 (valor -> ID .)
    ID              reduce using rule 72 (valor -> ID .)
    RFUNCTION       reduce using rule 72 (valor -> ID .)
    RWHILE          reduce using rule 72 (valor -> ID .)
    RGLOBAL         reduce using rule 72 (valor -> ID .)
    RLOCAL          reduce using rule 72 (valor -> ID .)
    VERDADERO       reduce using rule 72 (valor -> ID .)
    FALSO           reduce using rule 72 (valor -> ID .)
    ENTERO          reduce using rule 72 (valor -> ID .)
    DECIMAL         reduce using rule 72 (valor -> ID .)
    CHAR            reduce using rule 72 (valor -> ID .)
    IUPPERCASE      reduce using rule 72 (valor -> ID .)
    ILOWERCASE      reduce using rule 72 (valor -> ID .)
    IPARSE          reduce using rule 72 (valor -> ID .)
    STRING          reduce using rule 72 (valor -> ID .)
    ILOGD           reduce using rule 72 (valor -> ID .)
    ILOG            reduce using rule 72 (valor -> ID .)
    ISIN            reduce using rule 72 (valor -> ID .)
    ICOS            reduce using rule 72 (valor -> ID .)
    ITAN            reduce using rule 72 (valor -> ID .)
    ISQRT           reduce using rule 72 (valor -> ID .)
    RTRUNC          reduce using rule 72 (valor -> ID .)
    RTYPEOF         reduce using rule 72 (valor -> ID .)
    ISTRING         reduce using rule 72 (valor -> ID .)
    RFLOATC         reduce using rule 72 (valor -> ID .)
    $end            reduce using rule 72 (valor -> ID .)
    REND            reduce using rule 72 (valor -> ID .)
    PARIZQ          shift and go to state 73
    IGUAL           reduce using rule 73 (empty -> .)

  ! PARIZQ          [ reduce using rule 72 (valor -> ID .) ]
  ! PARIZQ          [ reduce using rule 73 (empty -> .) ]

    asingArray                     shift and go to state 71
    ParametrosFunc                 shift and go to state 72
    empty                          shift and go to state 74

state 19

    (11) DecFunc -> RFUNCTION . ID PARIZQ Parametros PARDER block REND
    (12) DecFunc -> RFUNCTION . ID PARIZQ PARDER block REND

    ID              shift and go to state 75


state 20

    (54) expresionR -> booleano .

    MAYOR           reduce using rule 54 (expresionR -> booleano .)
    MENOR           reduce using rule 54 (expresionR -> booleano .)
    MAYORIGUAL      reduce using rule 54 (expresionR -> booleano .)
    MENORIGUAL      reduce using rule 54 (expresionR -> booleano .)
    IGUALIGUAL      reduce using rule 54 (expresionR -> booleano .)
    NOIGUAL         reduce using rule 54 (expresionR -> booleano .)
    AND             reduce using rule 54 (expresionR -> booleano .)
    OR              reduce using rule 54 (expresionR -> booleano .)
    IPRINT          reduce using rule 54 (expresionR -> booleano .)
    IPRINTLN        reduce using rule 54 (expresionR -> booleano .)
    NOT             reduce using rule 54 (expresionR -> booleano .)
    PARIZQ          reduce using rule 54 (expresionR -> booleano .)
    ID              reduce using rule 54 (expresionR -> booleano .)
    RFUNCTION       reduce using rule 54 (expresionR -> booleano .)
    RWHILE          reduce using rule 54 (expresionR -> booleano .)
    RGLOBAL         reduce using rule 54 (expresionR -> booleano .)
    RLOCAL          reduce using rule 54 (expresionR -> booleano .)
    VERDADERO       reduce using rule 54 (expresionR -> booleano .)
    FALSO           reduce using rule 54 (expresionR -> booleano .)
    MENOS           reduce using rule 54 (expresionR -> booleano .)
    ENTERO          reduce using rule 54 (expresionR -> booleano .)
    DECIMAL         reduce using rule 54 (expresionR -> booleano .)
    CHAR            reduce using rule 54 (expresionR -> booleano .)
    IUPPERCASE      reduce using rule 54 (expresionR -> booleano .)
    ILOWERCASE      reduce using rule 54 (expresionR -> booleano .)
    IPARSE          reduce using rule 54 (expresionR -> booleano .)
    STRING          reduce using rule 54 (expresionR -> booleano .)
    ILOGD           reduce using rule 54 (expresionR -> booleano .)
    ILOG            reduce using rule 54 (expresionR -> booleano .)
    ISIN            reduce using rule 54 (expresionR -> booleano .)
    ICOS            reduce using rule 54 (expresionR -> booleano .)
    ITAN            reduce using rule 54 (expresionR -> booleano .)
    ISQRT           reduce using rule 54 (expresionR -> booleano .)
    RTRUNC          reduce using rule 54 (expresionR -> booleano .)
    RTYPEOF         reduce using rule 54 (expresionR -> booleano .)
    ISTRING         reduce using rule 54 (expresionR -> booleano .)
    RFLOATC         reduce using rule 54 (expresionR -> booleano .)
    $end            reduce using rule 54 (expresionR -> booleano .)
    PARDER          reduce using rule 54 (expresionR -> booleano .)
    REND            reduce using rule 54 (expresionR -> booleano .)
    COMA            reduce using rule 54 (expresionR -> booleano .)
    FPTS            reduce using rule 54 (expresionR -> booleano .)
    PTCOMA          reduce using rule 54 (expresionR -> booleano .)


state 21

    (55) expresionR -> expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . DIVIDIDO expresion
    (59) expresion -> expresion . POR expresion
    (60) expresion -> expresion . POW expresion
    (61) expresion -> expresion . MOD expresion

  ! shift/reduce conflict for MENOS resolved as shift
    MAYOR           reduce using rule 55 (expresionR -> expresion .)
    MENOR           reduce using rule 55 (expresionR -> expresion .)
    MAYORIGUAL      reduce using rule 55 (expresionR -> expresion .)
    MENORIGUAL      reduce using rule 55 (expresionR -> expresion .)
    IGUALIGUAL      reduce using rule 55 (expresionR -> expresion .)
    NOIGUAL         reduce using rule 55 (expresionR -> expresion .)
    AND             reduce using rule 55 (expresionR -> expresion .)
    OR              reduce using rule 55 (expresionR -> expresion .)
    IPRINT          reduce using rule 55 (expresionR -> expresion .)
    IPRINTLN        reduce using rule 55 (expresionR -> expresion .)
    NOT             reduce using rule 55 (expresionR -> expresion .)
    PARIZQ          reduce using rule 55 (expresionR -> expresion .)
    ID              reduce using rule 55 (expresionR -> expresion .)
    RFUNCTION       reduce using rule 55 (expresionR -> expresion .)
    RWHILE          reduce using rule 55 (expresionR -> expresion .)
    RGLOBAL         reduce using rule 55 (expresionR -> expresion .)
    RLOCAL          reduce using rule 55 (expresionR -> expresion .)
    VERDADERO       reduce using rule 55 (expresionR -> expresion .)
    FALSO           reduce using rule 55 (expresionR -> expresion .)
    ENTERO          reduce using rule 55 (expresionR -> expresion .)
    DECIMAL         reduce using rule 55 (expresionR -> expresion .)
    CHAR            reduce using rule 55 (expresionR -> expresion .)
    IUPPERCASE      reduce using rule 55 (expresionR -> expresion .)
    ILOWERCASE      reduce using rule 55 (expresionR -> expresion .)
    IPARSE          reduce using rule 55 (expresionR -> expresion .)
    STRING          reduce using rule 55 (expresionR -> expresion .)
    ILOGD           reduce using rule 55 (expresionR -> expresion .)
    ILOG            reduce using rule 55 (expresionR -> expresion .)
    ISIN            reduce using rule 55 (expresionR -> expresion .)
    ICOS            reduce using rule 55 (expresionR -> expresion .)
    ITAN            reduce using rule 55 (expresionR -> expresion .)
    ISQRT           reduce using rule 55 (expresionR -> expresion .)
    RTRUNC          reduce using rule 55 (expresionR -> expresion .)
    RTYPEOF         reduce using rule 55 (expresionR -> expresion .)
    ISTRING         reduce using rule 55 (expresionR -> expresion .)
    RFLOATC         reduce using rule 55 (expresionR -> expresion .)
    $end            reduce using rule 55 (expresionR -> expresion .)
    PARDER          reduce using rule 55 (expresionR -> expresion .)
    REND            reduce using rule 55 (expresionR -> expresion .)
    COMA            reduce using rule 55 (expresionR -> expresion .)
    FPTS            reduce using rule 55 (expresionR -> expresion .)
    PTCOMA          reduce using rule 55 (expresionR -> expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    DIVIDIDO        shift and go to state 78
    POR             shift and go to state 79
    POW             shift and go to state 80
    MOD             shift and go to state 81

  ! MENOS           [ reduce using rule 55 (expresionR -> expresion .) ]


state 22

    (23) whileSt -> RWHILE . expresionL block REND
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresionL                     shift and go to state 82
    expresionR                     shift and go to state 15
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 23

    (27) TipoVarible -> RGLOBAL .

    ID              reduce using rule 27 (TipoVarible -> RGLOBAL .)


state 24

    (28) TipoVarible -> RLOCAL .

    ID              reduce using rule 28 (TipoVarible -> RLOCAL .)


state 25

    (65) booleano -> VERDADERO .

    MAYOR           reduce using rule 65 (booleano -> VERDADERO .)
    MENOR           reduce using rule 65 (booleano -> VERDADERO .)
    MAYORIGUAL      reduce using rule 65 (booleano -> VERDADERO .)
    MENORIGUAL      reduce using rule 65 (booleano -> VERDADERO .)
    IGUALIGUAL      reduce using rule 65 (booleano -> VERDADERO .)
    NOIGUAL         reduce using rule 65 (booleano -> VERDADERO .)
    AND             reduce using rule 65 (booleano -> VERDADERO .)
    OR              reduce using rule 65 (booleano -> VERDADERO .)
    IPRINT          reduce using rule 65 (booleano -> VERDADERO .)
    IPRINTLN        reduce using rule 65 (booleano -> VERDADERO .)
    NOT             reduce using rule 65 (booleano -> VERDADERO .)
    PARIZQ          reduce using rule 65 (booleano -> VERDADERO .)
    ID              reduce using rule 65 (booleano -> VERDADERO .)
    RFUNCTION       reduce using rule 65 (booleano -> VERDADERO .)
    RWHILE          reduce using rule 65 (booleano -> VERDADERO .)
    RGLOBAL         reduce using rule 65 (booleano -> VERDADERO .)
    RLOCAL          reduce using rule 65 (booleano -> VERDADERO .)
    VERDADERO       reduce using rule 65 (booleano -> VERDADERO .)
    FALSO           reduce using rule 65 (booleano -> VERDADERO .)
    MENOS           reduce using rule 65 (booleano -> VERDADERO .)
    ENTERO          reduce using rule 65 (booleano -> VERDADERO .)
    DECIMAL         reduce using rule 65 (booleano -> VERDADERO .)
    CHAR            reduce using rule 65 (booleano -> VERDADERO .)
    IUPPERCASE      reduce using rule 65 (booleano -> VERDADERO .)
    ILOWERCASE      reduce using rule 65 (booleano -> VERDADERO .)
    IPARSE          reduce using rule 65 (booleano -> VERDADERO .)
    STRING          reduce using rule 65 (booleano -> VERDADERO .)
    ILOGD           reduce using rule 65 (booleano -> VERDADERO .)
    ILOG            reduce using rule 65 (booleano -> VERDADERO .)
    ISIN            reduce using rule 65 (booleano -> VERDADERO .)
    ICOS            reduce using rule 65 (booleano -> VERDADERO .)
    ITAN            reduce using rule 65 (booleano -> VERDADERO .)
    ISQRT           reduce using rule 65 (booleano -> VERDADERO .)
    RTRUNC          reduce using rule 65 (booleano -> VERDADERO .)
    RTYPEOF         reduce using rule 65 (booleano -> VERDADERO .)
    ISTRING         reduce using rule 65 (booleano -> VERDADERO .)
    RFLOATC         reduce using rule 65 (booleano -> VERDADERO .)
    $end            reduce using rule 65 (booleano -> VERDADERO .)
    PARDER          reduce using rule 65 (booleano -> VERDADERO .)
    REND            reduce using rule 65 (booleano -> VERDADERO .)
    COMA            reduce using rule 65 (booleano -> VERDADERO .)
    FPTS            reduce using rule 65 (booleano -> VERDADERO .)
    PTCOMA          reduce using rule 65 (booleano -> VERDADERO .)


state 26

    (66) booleano -> FALSO .

    MAYOR           reduce using rule 66 (booleano -> FALSO .)
    MENOR           reduce using rule 66 (booleano -> FALSO .)
    MAYORIGUAL      reduce using rule 66 (booleano -> FALSO .)
    MENORIGUAL      reduce using rule 66 (booleano -> FALSO .)
    IGUALIGUAL      reduce using rule 66 (booleano -> FALSO .)
    NOIGUAL         reduce using rule 66 (booleano -> FALSO .)
    AND             reduce using rule 66 (booleano -> FALSO .)
    OR              reduce using rule 66 (booleano -> FALSO .)
    IPRINT          reduce using rule 66 (booleano -> FALSO .)
    IPRINTLN        reduce using rule 66 (booleano -> FALSO .)
    NOT             reduce using rule 66 (booleano -> FALSO .)
    PARIZQ          reduce using rule 66 (booleano -> FALSO .)
    ID              reduce using rule 66 (booleano -> FALSO .)
    RFUNCTION       reduce using rule 66 (booleano -> FALSO .)
    RWHILE          reduce using rule 66 (booleano -> FALSO .)
    RGLOBAL         reduce using rule 66 (booleano -> FALSO .)
    RLOCAL          reduce using rule 66 (booleano -> FALSO .)
    VERDADERO       reduce using rule 66 (booleano -> FALSO .)
    FALSO           reduce using rule 66 (booleano -> FALSO .)
    MENOS           reduce using rule 66 (booleano -> FALSO .)
    ENTERO          reduce using rule 66 (booleano -> FALSO .)
    DECIMAL         reduce using rule 66 (booleano -> FALSO .)
    CHAR            reduce using rule 66 (booleano -> FALSO .)
    IUPPERCASE      reduce using rule 66 (booleano -> FALSO .)
    ILOWERCASE      reduce using rule 66 (booleano -> FALSO .)
    IPARSE          reduce using rule 66 (booleano -> FALSO .)
    STRING          reduce using rule 66 (booleano -> FALSO .)
    ILOGD           reduce using rule 66 (booleano -> FALSO .)
    ILOG            reduce using rule 66 (booleano -> FALSO .)
    ISIN            reduce using rule 66 (booleano -> FALSO .)
    ICOS            reduce using rule 66 (booleano -> FALSO .)
    ITAN            reduce using rule 66 (booleano -> FALSO .)
    ISQRT           reduce using rule 66 (booleano -> FALSO .)
    RTRUNC          reduce using rule 66 (booleano -> FALSO .)
    RTYPEOF         reduce using rule 66 (booleano -> FALSO .)
    ISTRING         reduce using rule 66 (booleano -> FALSO .)
    RFLOATC         reduce using rule 66 (booleano -> FALSO .)
    $end            reduce using rule 66 (booleano -> FALSO .)
    PARDER          reduce using rule 66 (booleano -> FALSO .)
    REND            reduce using rule 66 (booleano -> FALSO .)
    COMA            reduce using rule 66 (booleano -> FALSO .)
    FPTS            reduce using rule 66 (booleano -> FALSO .)
    PTCOMA          reduce using rule 66 (booleano -> FALSO .)


state 27

    (62) expresion -> MENOS . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 84
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresion                      shift and go to state 83
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 28

    (64) expresion -> valor .

    MAS             reduce using rule 64 (expresion -> valor .)
    MENOS           reduce using rule 64 (expresion -> valor .)
    DIVIDIDO        reduce using rule 64 (expresion -> valor .)
    POR             reduce using rule 64 (expresion -> valor .)
    POW             reduce using rule 64 (expresion -> valor .)
    MOD             reduce using rule 64 (expresion -> valor .)
    MAYOR           reduce using rule 64 (expresion -> valor .)
    MENOR           reduce using rule 64 (expresion -> valor .)
    MAYORIGUAL      reduce using rule 64 (expresion -> valor .)
    MENORIGUAL      reduce using rule 64 (expresion -> valor .)
    IGUALIGUAL      reduce using rule 64 (expresion -> valor .)
    NOIGUAL         reduce using rule 64 (expresion -> valor .)
    AND             reduce using rule 64 (expresion -> valor .)
    OR              reduce using rule 64 (expresion -> valor .)
    IPRINT          reduce using rule 64 (expresion -> valor .)
    IPRINTLN        reduce using rule 64 (expresion -> valor .)
    NOT             reduce using rule 64 (expresion -> valor .)
    PARIZQ          reduce using rule 64 (expresion -> valor .)
    ID              reduce using rule 64 (expresion -> valor .)
    RFUNCTION       reduce using rule 64 (expresion -> valor .)
    RWHILE          reduce using rule 64 (expresion -> valor .)
    RGLOBAL         reduce using rule 64 (expresion -> valor .)
    RLOCAL          reduce using rule 64 (expresion -> valor .)
    VERDADERO       reduce using rule 64 (expresion -> valor .)
    FALSO           reduce using rule 64 (expresion -> valor .)
    ENTERO          reduce using rule 64 (expresion -> valor .)
    DECIMAL         reduce using rule 64 (expresion -> valor .)
    CHAR            reduce using rule 64 (expresion -> valor .)
    IUPPERCASE      reduce using rule 64 (expresion -> valor .)
    ILOWERCASE      reduce using rule 64 (expresion -> valor .)
    IPARSE          reduce using rule 64 (expresion -> valor .)
    STRING          reduce using rule 64 (expresion -> valor .)
    ILOGD           reduce using rule 64 (expresion -> valor .)
    ILOG            reduce using rule 64 (expresion -> valor .)
    ISIN            reduce using rule 64 (expresion -> valor .)
    ICOS            reduce using rule 64 (expresion -> valor .)
    ITAN            reduce using rule 64 (expresion -> valor .)
    ISQRT           reduce using rule 64 (expresion -> valor .)
    RTRUNC          reduce using rule 64 (expresion -> valor .)
    RTYPEOF         reduce using rule 64 (expresion -> valor .)
    ISTRING         reduce using rule 64 (expresion -> valor .)
    RFLOATC         reduce using rule 64 (expresion -> valor .)
    $end            reduce using rule 64 (expresion -> valor .)
    PARDER          reduce using rule 64 (expresion -> valor .)
    REND            reduce using rule 64 (expresion -> valor .)
    COMA            reduce using rule 64 (expresion -> valor .)
    FPTS            reduce using rule 64 (expresion -> valor .)
    PTCOMA          reduce using rule 64 (expresion -> valor .)


state 29

    (67) valor -> ENTERO .

    MAS             reduce using rule 67 (valor -> ENTERO .)
    MENOS           reduce using rule 67 (valor -> ENTERO .)
    DIVIDIDO        reduce using rule 67 (valor -> ENTERO .)
    POR             reduce using rule 67 (valor -> ENTERO .)
    POW             reduce using rule 67 (valor -> ENTERO .)
    MOD             reduce using rule 67 (valor -> ENTERO .)
    MAYOR           reduce using rule 67 (valor -> ENTERO .)
    MENOR           reduce using rule 67 (valor -> ENTERO .)
    MAYORIGUAL      reduce using rule 67 (valor -> ENTERO .)
    MENORIGUAL      reduce using rule 67 (valor -> ENTERO .)
    IGUALIGUAL      reduce using rule 67 (valor -> ENTERO .)
    NOIGUAL         reduce using rule 67 (valor -> ENTERO .)
    AND             reduce using rule 67 (valor -> ENTERO .)
    OR              reduce using rule 67 (valor -> ENTERO .)
    IPRINT          reduce using rule 67 (valor -> ENTERO .)
    IPRINTLN        reduce using rule 67 (valor -> ENTERO .)
    NOT             reduce using rule 67 (valor -> ENTERO .)
    PARIZQ          reduce using rule 67 (valor -> ENTERO .)
    ID              reduce using rule 67 (valor -> ENTERO .)
    RFUNCTION       reduce using rule 67 (valor -> ENTERO .)
    RWHILE          reduce using rule 67 (valor -> ENTERO .)
    RGLOBAL         reduce using rule 67 (valor -> ENTERO .)
    RLOCAL          reduce using rule 67 (valor -> ENTERO .)
    VERDADERO       reduce using rule 67 (valor -> ENTERO .)
    FALSO           reduce using rule 67 (valor -> ENTERO .)
    ENTERO          reduce using rule 67 (valor -> ENTERO .)
    DECIMAL         reduce using rule 67 (valor -> ENTERO .)
    CHAR            reduce using rule 67 (valor -> ENTERO .)
    IUPPERCASE      reduce using rule 67 (valor -> ENTERO .)
    ILOWERCASE      reduce using rule 67 (valor -> ENTERO .)
    IPARSE          reduce using rule 67 (valor -> ENTERO .)
    STRING          reduce using rule 67 (valor -> ENTERO .)
    ILOGD           reduce using rule 67 (valor -> ENTERO .)
    ILOG            reduce using rule 67 (valor -> ENTERO .)
    ISIN            reduce using rule 67 (valor -> ENTERO .)
    ICOS            reduce using rule 67 (valor -> ENTERO .)
    ITAN            reduce using rule 67 (valor -> ENTERO .)
    ISQRT           reduce using rule 67 (valor -> ENTERO .)
    RTRUNC          reduce using rule 67 (valor -> ENTERO .)
    RTYPEOF         reduce using rule 67 (valor -> ENTERO .)
    ISTRING         reduce using rule 67 (valor -> ENTERO .)
    RFLOATC         reduce using rule 67 (valor -> ENTERO .)
    $end            reduce using rule 67 (valor -> ENTERO .)
    PARDER          reduce using rule 67 (valor -> ENTERO .)
    REND            reduce using rule 67 (valor -> ENTERO .)
    COMA            reduce using rule 67 (valor -> ENTERO .)
    FPTS            reduce using rule 67 (valor -> ENTERO .)
    PTCOMA          reduce using rule 67 (valor -> ENTERO .)


state 30

    (68) valor -> DECIMAL .

    MAS             reduce using rule 68 (valor -> DECIMAL .)
    MENOS           reduce using rule 68 (valor -> DECIMAL .)
    DIVIDIDO        reduce using rule 68 (valor -> DECIMAL .)
    POR             reduce using rule 68 (valor -> DECIMAL .)
    POW             reduce using rule 68 (valor -> DECIMAL .)
    MOD             reduce using rule 68 (valor -> DECIMAL .)
    MAYOR           reduce using rule 68 (valor -> DECIMAL .)
    MENOR           reduce using rule 68 (valor -> DECIMAL .)
    MAYORIGUAL      reduce using rule 68 (valor -> DECIMAL .)
    MENORIGUAL      reduce using rule 68 (valor -> DECIMAL .)
    IGUALIGUAL      reduce using rule 68 (valor -> DECIMAL .)
    NOIGUAL         reduce using rule 68 (valor -> DECIMAL .)
    AND             reduce using rule 68 (valor -> DECIMAL .)
    OR              reduce using rule 68 (valor -> DECIMAL .)
    IPRINT          reduce using rule 68 (valor -> DECIMAL .)
    IPRINTLN        reduce using rule 68 (valor -> DECIMAL .)
    NOT             reduce using rule 68 (valor -> DECIMAL .)
    PARIZQ          reduce using rule 68 (valor -> DECIMAL .)
    ID              reduce using rule 68 (valor -> DECIMAL .)
    RFUNCTION       reduce using rule 68 (valor -> DECIMAL .)
    RWHILE          reduce using rule 68 (valor -> DECIMAL .)
    RGLOBAL         reduce using rule 68 (valor -> DECIMAL .)
    RLOCAL          reduce using rule 68 (valor -> DECIMAL .)
    VERDADERO       reduce using rule 68 (valor -> DECIMAL .)
    FALSO           reduce using rule 68 (valor -> DECIMAL .)
    ENTERO          reduce using rule 68 (valor -> DECIMAL .)
    DECIMAL         reduce using rule 68 (valor -> DECIMAL .)
    CHAR            reduce using rule 68 (valor -> DECIMAL .)
    IUPPERCASE      reduce using rule 68 (valor -> DECIMAL .)
    ILOWERCASE      reduce using rule 68 (valor -> DECIMAL .)
    IPARSE          reduce using rule 68 (valor -> DECIMAL .)
    STRING          reduce using rule 68 (valor -> DECIMAL .)
    ILOGD           reduce using rule 68 (valor -> DECIMAL .)
    ILOG            reduce using rule 68 (valor -> DECIMAL .)
    ISIN            reduce using rule 68 (valor -> DECIMAL .)
    ICOS            reduce using rule 68 (valor -> DECIMAL .)
    ITAN            reduce using rule 68 (valor -> DECIMAL .)
    ISQRT           reduce using rule 68 (valor -> DECIMAL .)
    RTRUNC          reduce using rule 68 (valor -> DECIMAL .)
    RTYPEOF         reduce using rule 68 (valor -> DECIMAL .)
    ISTRING         reduce using rule 68 (valor -> DECIMAL .)
    RFLOATC         reduce using rule 68 (valor -> DECIMAL .)
    $end            reduce using rule 68 (valor -> DECIMAL .)
    PARDER          reduce using rule 68 (valor -> DECIMAL .)
    REND            reduce using rule 68 (valor -> DECIMAL .)
    COMA            reduce using rule 68 (valor -> DECIMAL .)
    FPTS            reduce using rule 68 (valor -> DECIMAL .)
    PTCOMA          reduce using rule 68 (valor -> DECIMAL .)


state 31

    (69) valor -> CHAR .

    MAS             reduce using rule 69 (valor -> CHAR .)
    MENOS           reduce using rule 69 (valor -> CHAR .)
    DIVIDIDO        reduce using rule 69 (valor -> CHAR .)
    POR             reduce using rule 69 (valor -> CHAR .)
    POW             reduce using rule 69 (valor -> CHAR .)
    MOD             reduce using rule 69 (valor -> CHAR .)
    MAYOR           reduce using rule 69 (valor -> CHAR .)
    MENOR           reduce using rule 69 (valor -> CHAR .)
    MAYORIGUAL      reduce using rule 69 (valor -> CHAR .)
    MENORIGUAL      reduce using rule 69 (valor -> CHAR .)
    IGUALIGUAL      reduce using rule 69 (valor -> CHAR .)
    NOIGUAL         reduce using rule 69 (valor -> CHAR .)
    AND             reduce using rule 69 (valor -> CHAR .)
    OR              reduce using rule 69 (valor -> CHAR .)
    IPRINT          reduce using rule 69 (valor -> CHAR .)
    IPRINTLN        reduce using rule 69 (valor -> CHAR .)
    NOT             reduce using rule 69 (valor -> CHAR .)
    PARIZQ          reduce using rule 69 (valor -> CHAR .)
    ID              reduce using rule 69 (valor -> CHAR .)
    RFUNCTION       reduce using rule 69 (valor -> CHAR .)
    RWHILE          reduce using rule 69 (valor -> CHAR .)
    RGLOBAL         reduce using rule 69 (valor -> CHAR .)
    RLOCAL          reduce using rule 69 (valor -> CHAR .)
    VERDADERO       reduce using rule 69 (valor -> CHAR .)
    FALSO           reduce using rule 69 (valor -> CHAR .)
    ENTERO          reduce using rule 69 (valor -> CHAR .)
    DECIMAL         reduce using rule 69 (valor -> CHAR .)
    CHAR            reduce using rule 69 (valor -> CHAR .)
    IUPPERCASE      reduce using rule 69 (valor -> CHAR .)
    ILOWERCASE      reduce using rule 69 (valor -> CHAR .)
    IPARSE          reduce using rule 69 (valor -> CHAR .)
    STRING          reduce using rule 69 (valor -> CHAR .)
    ILOGD           reduce using rule 69 (valor -> CHAR .)
    ILOG            reduce using rule 69 (valor -> CHAR .)
    ISIN            reduce using rule 69 (valor -> CHAR .)
    ICOS            reduce using rule 69 (valor -> CHAR .)
    ITAN            reduce using rule 69 (valor -> CHAR .)
    ISQRT           reduce using rule 69 (valor -> CHAR .)
    RTRUNC          reduce using rule 69 (valor -> CHAR .)
    RTYPEOF         reduce using rule 69 (valor -> CHAR .)
    ISTRING         reduce using rule 69 (valor -> CHAR .)
    RFLOATC         reduce using rule 69 (valor -> CHAR .)
    $end            reduce using rule 69 (valor -> CHAR .)
    PARDER          reduce using rule 69 (valor -> CHAR .)
    REND            reduce using rule 69 (valor -> CHAR .)
    COMA            reduce using rule 69 (valor -> CHAR .)
    FPTS            reduce using rule 69 (valor -> CHAR .)
    PTCOMA          reduce using rule 69 (valor -> CHAR .)


state 32

    (70) valor -> cadena .

    MAS             reduce using rule 70 (valor -> cadena .)
    MENOS           reduce using rule 70 (valor -> cadena .)
    DIVIDIDO        reduce using rule 70 (valor -> cadena .)
    POR             reduce using rule 70 (valor -> cadena .)
    POW             reduce using rule 70 (valor -> cadena .)
    MOD             reduce using rule 70 (valor -> cadena .)
    MAYOR           reduce using rule 70 (valor -> cadena .)
    MENOR           reduce using rule 70 (valor -> cadena .)
    MAYORIGUAL      reduce using rule 70 (valor -> cadena .)
    MENORIGUAL      reduce using rule 70 (valor -> cadena .)
    IGUALIGUAL      reduce using rule 70 (valor -> cadena .)
    NOIGUAL         reduce using rule 70 (valor -> cadena .)
    AND             reduce using rule 70 (valor -> cadena .)
    OR              reduce using rule 70 (valor -> cadena .)
    IPRINT          reduce using rule 70 (valor -> cadena .)
    IPRINTLN        reduce using rule 70 (valor -> cadena .)
    NOT             reduce using rule 70 (valor -> cadena .)
    PARIZQ          reduce using rule 70 (valor -> cadena .)
    ID              reduce using rule 70 (valor -> cadena .)
    RFUNCTION       reduce using rule 70 (valor -> cadena .)
    RWHILE          reduce using rule 70 (valor -> cadena .)
    RGLOBAL         reduce using rule 70 (valor -> cadena .)
    RLOCAL          reduce using rule 70 (valor -> cadena .)
    VERDADERO       reduce using rule 70 (valor -> cadena .)
    FALSO           reduce using rule 70 (valor -> cadena .)
    ENTERO          reduce using rule 70 (valor -> cadena .)
    DECIMAL         reduce using rule 70 (valor -> cadena .)
    CHAR            reduce using rule 70 (valor -> cadena .)
    IUPPERCASE      reduce using rule 70 (valor -> cadena .)
    ILOWERCASE      reduce using rule 70 (valor -> cadena .)
    IPARSE          reduce using rule 70 (valor -> cadena .)
    STRING          reduce using rule 70 (valor -> cadena .)
    ILOGD           reduce using rule 70 (valor -> cadena .)
    ILOG            reduce using rule 70 (valor -> cadena .)
    ISIN            reduce using rule 70 (valor -> cadena .)
    ICOS            reduce using rule 70 (valor -> cadena .)
    ITAN            reduce using rule 70 (valor -> cadena .)
    ISQRT           reduce using rule 70 (valor -> cadena .)
    RTRUNC          reduce using rule 70 (valor -> cadena .)
    RTYPEOF         reduce using rule 70 (valor -> cadena .)
    ISTRING         reduce using rule 70 (valor -> cadena .)
    RFLOATC         reduce using rule 70 (valor -> cadena .)
    $end            reduce using rule 70 (valor -> cadena .)
    PARDER          reduce using rule 70 (valor -> cadena .)
    REND            reduce using rule 70 (valor -> cadena .)
    COMA            reduce using rule 70 (valor -> cadena .)
    FPTS            reduce using rule 70 (valor -> cadena .)
    PTCOMA          reduce using rule 70 (valor -> cadena .)


state 33

    (71) valor -> nativas .

    MAS             reduce using rule 71 (valor -> nativas .)
    MENOS           reduce using rule 71 (valor -> nativas .)
    DIVIDIDO        reduce using rule 71 (valor -> nativas .)
    POR             reduce using rule 71 (valor -> nativas .)
    POW             reduce using rule 71 (valor -> nativas .)
    MOD             reduce using rule 71 (valor -> nativas .)
    MAYOR           reduce using rule 71 (valor -> nativas .)
    MENOR           reduce using rule 71 (valor -> nativas .)
    MAYORIGUAL      reduce using rule 71 (valor -> nativas .)
    MENORIGUAL      reduce using rule 71 (valor -> nativas .)
    IGUALIGUAL      reduce using rule 71 (valor -> nativas .)
    NOIGUAL         reduce using rule 71 (valor -> nativas .)
    AND             reduce using rule 71 (valor -> nativas .)
    OR              reduce using rule 71 (valor -> nativas .)
    IPRINT          reduce using rule 71 (valor -> nativas .)
    IPRINTLN        reduce using rule 71 (valor -> nativas .)
    NOT             reduce using rule 71 (valor -> nativas .)
    PARIZQ          reduce using rule 71 (valor -> nativas .)
    ID              reduce using rule 71 (valor -> nativas .)
    RFUNCTION       reduce using rule 71 (valor -> nativas .)
    RWHILE          reduce using rule 71 (valor -> nativas .)
    RGLOBAL         reduce using rule 71 (valor -> nativas .)
    RLOCAL          reduce using rule 71 (valor -> nativas .)
    VERDADERO       reduce using rule 71 (valor -> nativas .)
    FALSO           reduce using rule 71 (valor -> nativas .)
    ENTERO          reduce using rule 71 (valor -> nativas .)
    DECIMAL         reduce using rule 71 (valor -> nativas .)
    CHAR            reduce using rule 71 (valor -> nativas .)
    IUPPERCASE      reduce using rule 71 (valor -> nativas .)
    ILOWERCASE      reduce using rule 71 (valor -> nativas .)
    IPARSE          reduce using rule 71 (valor -> nativas .)
    STRING          reduce using rule 71 (valor -> nativas .)
    ILOGD           reduce using rule 71 (valor -> nativas .)
    ILOG            reduce using rule 71 (valor -> nativas .)
    ISIN            reduce using rule 71 (valor -> nativas .)
    ICOS            reduce using rule 71 (valor -> nativas .)
    ITAN            reduce using rule 71 (valor -> nativas .)
    ISQRT           reduce using rule 71 (valor -> nativas .)
    RTRUNC          reduce using rule 71 (valor -> nativas .)
    RTYPEOF         reduce using rule 71 (valor -> nativas .)
    ISTRING         reduce using rule 71 (valor -> nativas .)
    RFLOATC         reduce using rule 71 (valor -> nativas .)
    $end            reduce using rule 71 (valor -> nativas .)
    PARDER          reduce using rule 71 (valor -> nativas .)
    REND            reduce using rule 71 (valor -> nativas .)
    COMA            reduce using rule 71 (valor -> nativas .)
    FPTS            reduce using rule 71 (valor -> nativas .)
    PTCOMA          reduce using rule 71 (valor -> nativas .)


state 34

    (86) cadena -> IUPPERCASE . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 85


state 35

    (87) cadena -> ILOWERCASE . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 86


state 36

    (88) cadena -> IPARSE . PARIZQ ISTRING COMA expresionL PARDER
    (81) casteo -> IPARSE . PARIZQ Tipo COMA expresionL PARDER

    PARIZQ          shift and go to state 87


state 37

    (84) casteo -> ISTRING . PARIZQ expresionL PARDER

    PARIZQ          shift and go to state 88


state 38

    (89) cadena -> STRING .

    MAS             reduce using rule 89 (cadena -> STRING .)
    MENOS           reduce using rule 89 (cadena -> STRING .)
    DIVIDIDO        reduce using rule 89 (cadena -> STRING .)
    POR             reduce using rule 89 (cadena -> STRING .)
    POW             reduce using rule 89 (cadena -> STRING .)
    MOD             reduce using rule 89 (cadena -> STRING .)
    MAYOR           reduce using rule 89 (cadena -> STRING .)
    MENOR           reduce using rule 89 (cadena -> STRING .)
    MAYORIGUAL      reduce using rule 89 (cadena -> STRING .)
    MENORIGUAL      reduce using rule 89 (cadena -> STRING .)
    IGUALIGUAL      reduce using rule 89 (cadena -> STRING .)
    NOIGUAL         reduce using rule 89 (cadena -> STRING .)
    AND             reduce using rule 89 (cadena -> STRING .)
    OR              reduce using rule 89 (cadena -> STRING .)
    IPRINT          reduce using rule 89 (cadena -> STRING .)
    IPRINTLN        reduce using rule 89 (cadena -> STRING .)
    NOT             reduce using rule 89 (cadena -> STRING .)
    PARIZQ          reduce using rule 89 (cadena -> STRING .)
    ID              reduce using rule 89 (cadena -> STRING .)
    RFUNCTION       reduce using rule 89 (cadena -> STRING .)
    RWHILE          reduce using rule 89 (cadena -> STRING .)
    RGLOBAL         reduce using rule 89 (cadena -> STRING .)
    RLOCAL          reduce using rule 89 (cadena -> STRING .)
    VERDADERO       reduce using rule 89 (cadena -> STRING .)
    FALSO           reduce using rule 89 (cadena -> STRING .)
    ENTERO          reduce using rule 89 (cadena -> STRING .)
    DECIMAL         reduce using rule 89 (cadena -> STRING .)
    CHAR            reduce using rule 89 (cadena -> STRING .)
    IUPPERCASE      reduce using rule 89 (cadena -> STRING .)
    ILOWERCASE      reduce using rule 89 (cadena -> STRING .)
    IPARSE          reduce using rule 89 (cadena -> STRING .)
    STRING          reduce using rule 89 (cadena -> STRING .)
    ILOGD           reduce using rule 89 (cadena -> STRING .)
    ILOG            reduce using rule 89 (cadena -> STRING .)
    ISIN            reduce using rule 89 (cadena -> STRING .)
    ICOS            reduce using rule 89 (cadena -> STRING .)
    ITAN            reduce using rule 89 (cadena -> STRING .)
    ISQRT           reduce using rule 89 (cadena -> STRING .)
    RTRUNC          reduce using rule 89 (cadena -> STRING .)
    RTYPEOF         reduce using rule 89 (cadena -> STRING .)
    ISTRING         reduce using rule 89 (cadena -> STRING .)
    RFLOATC         reduce using rule 89 (cadena -> STRING .)
    $end            reduce using rule 89 (cadena -> STRING .)
    PARDER          reduce using rule 89 (cadena -> STRING .)
    REND            reduce using rule 89 (cadena -> STRING .)
    COMA            reduce using rule 89 (cadena -> STRING .)
    FPTS            reduce using rule 89 (cadena -> STRING .)
    PTCOMA          reduce using rule 89 (cadena -> STRING .)


state 39

    (74) nativas -> ILOGD . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 89


state 40

    (75) nativas -> ILOG . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 90


state 41

    (76) nativas -> ISIN . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 91


state 42

    (77) nativas -> ICOS . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 92


state 43

    (78) nativas -> ITAN . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 93


state 44

    (79) nativas -> ISQRT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 94


state 45

    (80) nativas -> casteo .

    MAS             reduce using rule 80 (nativas -> casteo .)
    MENOS           reduce using rule 80 (nativas -> casteo .)
    DIVIDIDO        reduce using rule 80 (nativas -> casteo .)
    POR             reduce using rule 80 (nativas -> casteo .)
    POW             reduce using rule 80 (nativas -> casteo .)
    MOD             reduce using rule 80 (nativas -> casteo .)
    MAYOR           reduce using rule 80 (nativas -> casteo .)
    MENOR           reduce using rule 80 (nativas -> casteo .)
    MAYORIGUAL      reduce using rule 80 (nativas -> casteo .)
    MENORIGUAL      reduce using rule 80 (nativas -> casteo .)
    IGUALIGUAL      reduce using rule 80 (nativas -> casteo .)
    NOIGUAL         reduce using rule 80 (nativas -> casteo .)
    AND             reduce using rule 80 (nativas -> casteo .)
    OR              reduce using rule 80 (nativas -> casteo .)
    IPRINT          reduce using rule 80 (nativas -> casteo .)
    IPRINTLN        reduce using rule 80 (nativas -> casteo .)
    NOT             reduce using rule 80 (nativas -> casteo .)
    PARIZQ          reduce using rule 80 (nativas -> casteo .)
    ID              reduce using rule 80 (nativas -> casteo .)
    RFUNCTION       reduce using rule 80 (nativas -> casteo .)
    RWHILE          reduce using rule 80 (nativas -> casteo .)
    RGLOBAL         reduce using rule 80 (nativas -> casteo .)
    RLOCAL          reduce using rule 80 (nativas -> casteo .)
    VERDADERO       reduce using rule 80 (nativas -> casteo .)
    FALSO           reduce using rule 80 (nativas -> casteo .)
    ENTERO          reduce using rule 80 (nativas -> casteo .)
    DECIMAL         reduce using rule 80 (nativas -> casteo .)
    CHAR            reduce using rule 80 (nativas -> casteo .)
    IUPPERCASE      reduce using rule 80 (nativas -> casteo .)
    ILOWERCASE      reduce using rule 80 (nativas -> casteo .)
    IPARSE          reduce using rule 80 (nativas -> casteo .)
    STRING          reduce using rule 80 (nativas -> casteo .)
    ILOGD           reduce using rule 80 (nativas -> casteo .)
    ILOG            reduce using rule 80 (nativas -> casteo .)
    ISIN            reduce using rule 80 (nativas -> casteo .)
    ICOS            reduce using rule 80 (nativas -> casteo .)
    ITAN            reduce using rule 80 (nativas -> casteo .)
    ISQRT           reduce using rule 80 (nativas -> casteo .)
    RTRUNC          reduce using rule 80 (nativas -> casteo .)
    RTYPEOF         reduce using rule 80 (nativas -> casteo .)
    ISTRING         reduce using rule 80 (nativas -> casteo .)
    RFLOATC         reduce using rule 80 (nativas -> casteo .)
    $end            reduce using rule 80 (nativas -> casteo .)
    PARDER          reduce using rule 80 (nativas -> casteo .)
    REND            reduce using rule 80 (nativas -> casteo .)
    COMA            reduce using rule 80 (nativas -> casteo .)
    FPTS            reduce using rule 80 (nativas -> casteo .)
    PTCOMA          reduce using rule 80 (nativas -> casteo .)


state 46

    (82) casteo -> RTRUNC . PARIZQ RINT COMA expresionL PARDER

    PARIZQ          shift and go to state 95


state 47

    (83) casteo -> RTYPEOF . PARIZQ expresionL PARDER

    PARIZQ          shift and go to state 96


state 48

    (85) casteo -> RFLOATC . PARIZQ expresionL PARDER

    PARIZQ          shift and go to state 97


state 49

    (2) instrucciones -> instrucciones instruccion .

    IPRINT          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IPRINTLN        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    NOT             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PARIZQ          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RFUNCTION       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RWHILE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RGLOBAL         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RLOCAL          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    VERDADERO       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FALSO           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MENOS           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ENTERO          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DECIMAL         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CHAR            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IUPPERCASE      reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ILOWERCASE      reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IPARSE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    STRING          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ILOGD           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ILOG            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ISIN            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ICOS            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ITAN            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ISQRT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RTRUNC          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RTYPEOF         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ISTRING         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RFLOATC         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    REND            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 50

    (4) instruccion -> impresion PTCOMA .

    IPRINT          reduce using rule 4 (instruccion -> impresion PTCOMA .)
    IPRINTLN        reduce using rule 4 (instruccion -> impresion PTCOMA .)
    NOT             reduce using rule 4 (instruccion -> impresion PTCOMA .)
    PARIZQ          reduce using rule 4 (instruccion -> impresion PTCOMA .)
    ID              reduce using rule 4 (instruccion -> impresion PTCOMA .)
    RFUNCTION       reduce using rule 4 (instruccion -> impresion PTCOMA .)
    RWHILE          reduce using rule 4 (instruccion -> impresion PTCOMA .)
    RGLOBAL         reduce using rule 4 (instruccion -> impresion PTCOMA .)
    RLOCAL          reduce using rule 4 (instruccion -> impresion PTCOMA .)
    VERDADERO       reduce using rule 4 (instruccion -> impresion PTCOMA .)
    FALSO           reduce using rule 4 (instruccion -> impresion PTCOMA .)
    MENOS           reduce using rule 4 (instruccion -> impresion PTCOMA .)
    ENTERO          reduce using rule 4 (instruccion -> impresion PTCOMA .)
    DECIMAL         reduce using rule 4 (instruccion -> impresion PTCOMA .)
    CHAR            reduce using rule 4 (instruccion -> impresion PTCOMA .)
    IUPPERCASE      reduce using rule 4 (instruccion -> impresion PTCOMA .)
    ILOWERCASE      reduce using rule 4 (instruccion -> impresion PTCOMA .)
    IPARSE          reduce using rule 4 (instruccion -> impresion PTCOMA .)
    STRING          reduce using rule 4 (instruccion -> impresion PTCOMA .)
    ILOGD           reduce using rule 4 (instruccion -> impresion PTCOMA .)
    ILOG            reduce using rule 4 (instruccion -> impresion PTCOMA .)
    ISIN            reduce using rule 4 (instruccion -> impresion PTCOMA .)
    ICOS            reduce using rule 4 (instruccion -> impresion PTCOMA .)
    ITAN            reduce using rule 4 (instruccion -> impresion PTCOMA .)
    ISQRT           reduce using rule 4 (instruccion -> impresion PTCOMA .)
    RTRUNC          reduce using rule 4 (instruccion -> impresion PTCOMA .)
    RTYPEOF         reduce using rule 4 (instruccion -> impresion PTCOMA .)
    ISTRING         reduce using rule 4 (instruccion -> impresion PTCOMA .)
    RFLOATC         reduce using rule 4 (instruccion -> impresion PTCOMA .)
    $end            reduce using rule 4 (instruccion -> impresion PTCOMA .)
    REND            reduce using rule 4 (instruccion -> impresion PTCOMA .)


state 51

    (42) expresionL -> expresionL AND . expresionL
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresionL                     shift and go to state 98
    expresionR                     shift and go to state 15
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 52

    (43) expresionL -> expresionL OR . expresionL
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresionL                     shift and go to state 99
    expresionR                     shift and go to state 15
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 53

    (6) instruccion -> ciclo PTCOMA .

    IPRINT          reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    IPRINTLN        reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    NOT             reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    PARIZQ          reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    ID              reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    RFUNCTION       reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    RWHILE          reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    RGLOBAL         reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    RLOCAL          reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    VERDADERO       reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    FALSO           reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    MENOS           reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    ENTERO          reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    DECIMAL         reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    CHAR            reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    IUPPERCASE      reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    ILOWERCASE      reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    IPARSE          reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    STRING          reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    ILOGD           reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    ILOG            reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    ISIN            reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    ICOS            reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    ITAN            reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    ISQRT           reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    RTRUNC          reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    RTYPEOF         reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    ISTRING         reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    RFLOATC         reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    $end            reduce using rule 6 (instruccion -> ciclo PTCOMA .)
    REND            reduce using rule 6 (instruccion -> ciclo PTCOMA .)


state 54

    (7) instruccion -> asignacion PTCOMA .

    IPRINT          reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    IPRINTLN        reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    NOT             reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    PARIZQ          reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    ID              reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    RFUNCTION       reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    RWHILE          reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    RGLOBAL         reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    RLOCAL          reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    VERDADERO       reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    FALSO           reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    MENOS           reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    ENTERO          reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    DECIMAL         reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    CHAR            reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    IUPPERCASE      reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    ILOWERCASE      reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    IPARSE          reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    STRING          reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    ILOGD           reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    ILOG            reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    ISIN            reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    ICOS            reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    ITAN            reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    ISQRT           reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    RTRUNC          reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    RTYPEOF         reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    ISTRING         reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    RFLOATC         reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    $end            reduce using rule 7 (instruccion -> asignacion PTCOMA .)
    REND            reduce using rule 7 (instruccion -> asignacion PTCOMA .)


state 55

    (8) instruccion -> DecFunc PTCOMA .

    IPRINT          reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    IPRINTLN        reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    NOT             reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    PARIZQ          reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    ID              reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    RFUNCTION       reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    RWHILE          reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    RGLOBAL         reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    RLOCAL          reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    VERDADERO       reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    FALSO           reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    MENOS           reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    ENTERO          reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    DECIMAL         reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    CHAR            reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    IUPPERCASE      reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    ILOWERCASE      reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    IPARSE          reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    STRING          reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    ILOGD           reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    ILOG            reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    ISIN            reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    ICOS            reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    ITAN            reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    ISQRT           reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    RTRUNC          reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    RTYPEOF         reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    ISTRING         reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    RFLOATC         reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    $end            reduce using rule 8 (instruccion -> DecFunc PTCOMA .)
    REND            reduce using rule 8 (instruccion -> DecFunc PTCOMA .)


state 56

    (9) instruccion -> callFunc PTCOMA .

    IPRINT          reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    IPRINTLN        reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    NOT             reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    PARIZQ          reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    ID              reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    RFUNCTION       reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    RWHILE          reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    RGLOBAL         reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    RLOCAL          reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    VERDADERO       reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    FALSO           reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    MENOS           reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    ENTERO          reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    DECIMAL         reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    CHAR            reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    IUPPERCASE      reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    ILOWERCASE      reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    IPARSE          reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    STRING          reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    ILOGD           reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    ILOG            reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    ISIN            reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    ICOS            reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    ITAN            reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    ISQRT           reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    RTRUNC          reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    RTYPEOF         reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    ISTRING         reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    RFLOATC         reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    $end            reduce using rule 9 (instruccion -> callFunc PTCOMA .)
    REND            reduce using rule 9 (instruccion -> callFunc PTCOMA .)


state 57

    (38) impresion -> IPRINT PARIZQ . val PARDER
    (40) val -> . val COMA val
    (41) val -> . expresionL
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    val                            shift and go to state 100
    expresionL                     shift and go to state 101
    expresionR                     shift and go to state 15
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 58

    (45) expresionL -> PARIZQ expresionL . PARDER
    (42) expresionL -> expresionL . AND expresionL
    (43) expresionL -> expresionL . OR expresionL

    PARDER          shift and go to state 102
    AND             shift and go to state 51
    OR              shift and go to state 52


state 59

    (53) expresionR -> PARIZQ expresionR . PARDER
    (46) expresionL -> expresionR .
    (47) expresionR -> expresionR . MAYOR expresionR
    (48) expresionR -> expresionR . MENOR expresionR
    (49) expresionR -> expresionR . MAYORIGUAL expresionR
    (50) expresionR -> expresionR . MENORIGUAL expresionR
    (51) expresionR -> expresionR . IGUALIGUAL expresionR
    (52) expresionR -> expresionR . NOIGUAL expresionR

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 103
    AND             reduce using rule 46 (expresionL -> expresionR .)
    OR              reduce using rule 46 (expresionL -> expresionR .)
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALIGUAL      shift and go to state 68
    NOIGUAL         shift and go to state 69

  ! PARDER          [ reduce using rule 46 (expresionL -> expresionR .) ]


state 60

    (63) expresion -> PARIZQ expresion . PARDER
    (55) expresionR -> expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . DIVIDIDO expresion
    (59) expresion -> expresion . POR expresion
    (60) expresion -> expresion . POW expresion
    (61) expresion -> expresion . MOD expresion

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 104
    MAYOR           reduce using rule 55 (expresionR -> expresion .)
    MENOR           reduce using rule 55 (expresionR -> expresion .)
    MAYORIGUAL      reduce using rule 55 (expresionR -> expresion .)
    MENORIGUAL      reduce using rule 55 (expresionR -> expresion .)
    IGUALIGUAL      reduce using rule 55 (expresionR -> expresion .)
    NOIGUAL         reduce using rule 55 (expresionR -> expresion .)
    AND             reduce using rule 55 (expresionR -> expresion .)
    OR              reduce using rule 55 (expresionR -> expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    DIVIDIDO        shift and go to state 78
    POR             shift and go to state 79
    POW             shift and go to state 80
    MOD             shift and go to state 81

  ! PARDER          [ reduce using rule 55 (expresionR -> expresion .) ]


state 61

    (72) valor -> ID .

    PARDER          reduce using rule 72 (valor -> ID .)
    MAS             reduce using rule 72 (valor -> ID .)
    MENOS           reduce using rule 72 (valor -> ID .)
    DIVIDIDO        reduce using rule 72 (valor -> ID .)
    POR             reduce using rule 72 (valor -> ID .)
    POW             reduce using rule 72 (valor -> ID .)
    MOD             reduce using rule 72 (valor -> ID .)
    MAYOR           reduce using rule 72 (valor -> ID .)
    MENOR           reduce using rule 72 (valor -> ID .)
    MAYORIGUAL      reduce using rule 72 (valor -> ID .)
    MENORIGUAL      reduce using rule 72 (valor -> ID .)
    IGUALIGUAL      reduce using rule 72 (valor -> ID .)
    NOIGUAL         reduce using rule 72 (valor -> ID .)
    AND             reduce using rule 72 (valor -> ID .)
    OR              reduce using rule 72 (valor -> ID .)
    IPRINT          reduce using rule 72 (valor -> ID .)
    IPRINTLN        reduce using rule 72 (valor -> ID .)
    NOT             reduce using rule 72 (valor -> ID .)
    PARIZQ          reduce using rule 72 (valor -> ID .)
    ID              reduce using rule 72 (valor -> ID .)
    RFUNCTION       reduce using rule 72 (valor -> ID .)
    RWHILE          reduce using rule 72 (valor -> ID .)
    RGLOBAL         reduce using rule 72 (valor -> ID .)
    RLOCAL          reduce using rule 72 (valor -> ID .)
    VERDADERO       reduce using rule 72 (valor -> ID .)
    FALSO           reduce using rule 72 (valor -> ID .)
    ENTERO          reduce using rule 72 (valor -> ID .)
    DECIMAL         reduce using rule 72 (valor -> ID .)
    CHAR            reduce using rule 72 (valor -> ID .)
    IUPPERCASE      reduce using rule 72 (valor -> ID .)
    ILOWERCASE      reduce using rule 72 (valor -> ID .)
    IPARSE          reduce using rule 72 (valor -> ID .)
    STRING          reduce using rule 72 (valor -> ID .)
    ILOGD           reduce using rule 72 (valor -> ID .)
    ILOG            reduce using rule 72 (valor -> ID .)
    ISIN            reduce using rule 72 (valor -> ID .)
    ICOS            reduce using rule 72 (valor -> ID .)
    ITAN            reduce using rule 72 (valor -> ID .)
    ISQRT           reduce using rule 72 (valor -> ID .)
    RTRUNC          reduce using rule 72 (valor -> ID .)
    RTYPEOF         reduce using rule 72 (valor -> ID .)
    ISTRING         reduce using rule 72 (valor -> ID .)
    RFLOATC         reduce using rule 72 (valor -> ID .)
    $end            reduce using rule 72 (valor -> ID .)
    REND            reduce using rule 72 (valor -> ID .)
    COMA            reduce using rule 72 (valor -> ID .)
    FPTS            reduce using rule 72 (valor -> ID .)
    PTCOMA          reduce using rule 72 (valor -> ID .)


state 62

    (39) impresion -> IPRINTLN PARIZQ . val PARDER
    (40) val -> . val COMA val
    (41) val -> . expresionL
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    val                            shift and go to state 105
    expresionL                     shift and go to state 101
    expresionR                     shift and go to state 15
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 63

    (44) expresionL -> NOT expresionL .
    (42) expresionL -> expresionL . AND expresionL
    (43) expresionL -> expresionL . OR expresionL

    AND             reduce using rule 44 (expresionL -> NOT expresionL .)
    OR              reduce using rule 44 (expresionL -> NOT expresionL .)
    IPRINT          reduce using rule 44 (expresionL -> NOT expresionL .)
    IPRINTLN        reduce using rule 44 (expresionL -> NOT expresionL .)
    NOT             reduce using rule 44 (expresionL -> NOT expresionL .)
    PARIZQ          reduce using rule 44 (expresionL -> NOT expresionL .)
    ID              reduce using rule 44 (expresionL -> NOT expresionL .)
    RFUNCTION       reduce using rule 44 (expresionL -> NOT expresionL .)
    RWHILE          reduce using rule 44 (expresionL -> NOT expresionL .)
    RGLOBAL         reduce using rule 44 (expresionL -> NOT expresionL .)
    RLOCAL          reduce using rule 44 (expresionL -> NOT expresionL .)
    VERDADERO       reduce using rule 44 (expresionL -> NOT expresionL .)
    FALSO           reduce using rule 44 (expresionL -> NOT expresionL .)
    MENOS           reduce using rule 44 (expresionL -> NOT expresionL .)
    ENTERO          reduce using rule 44 (expresionL -> NOT expresionL .)
    DECIMAL         reduce using rule 44 (expresionL -> NOT expresionL .)
    CHAR            reduce using rule 44 (expresionL -> NOT expresionL .)
    IUPPERCASE      reduce using rule 44 (expresionL -> NOT expresionL .)
    ILOWERCASE      reduce using rule 44 (expresionL -> NOT expresionL .)
    IPARSE          reduce using rule 44 (expresionL -> NOT expresionL .)
    STRING          reduce using rule 44 (expresionL -> NOT expresionL .)
    ILOGD           reduce using rule 44 (expresionL -> NOT expresionL .)
    ILOG            reduce using rule 44 (expresionL -> NOT expresionL .)
    ISIN            reduce using rule 44 (expresionL -> NOT expresionL .)
    ICOS            reduce using rule 44 (expresionL -> NOT expresionL .)
    ITAN            reduce using rule 44 (expresionL -> NOT expresionL .)
    ISQRT           reduce using rule 44 (expresionL -> NOT expresionL .)
    RTRUNC          reduce using rule 44 (expresionL -> NOT expresionL .)
    RTYPEOF         reduce using rule 44 (expresionL -> NOT expresionL .)
    ISTRING         reduce using rule 44 (expresionL -> NOT expresionL .)
    RFLOATC         reduce using rule 44 (expresionL -> NOT expresionL .)
    $end            reduce using rule 44 (expresionL -> NOT expresionL .)
    PARDER          reduce using rule 44 (expresionL -> NOT expresionL .)
    REND            reduce using rule 44 (expresionL -> NOT expresionL .)
    COMA            reduce using rule 44 (expresionL -> NOT expresionL .)
    FPTS            reduce using rule 44 (expresionL -> NOT expresionL .)
    PTCOMA          reduce using rule 44 (expresionL -> NOT expresionL .)

  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 64

    (47) expresionR -> expresionR MAYOR . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    PARIZQ          shift and go to state 107
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresionR                     shift and go to state 106
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 65

    (48) expresionR -> expresionR MENOR . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    PARIZQ          shift and go to state 107
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresionR                     shift and go to state 108
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 66

    (49) expresionR -> expresionR MAYORIGUAL . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    PARIZQ          shift and go to state 107
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresionR                     shift and go to state 109
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 67

    (50) expresionR -> expresionR MENORIGUAL . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    PARIZQ          shift and go to state 107
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresionR                     shift and go to state 110
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 68

    (51) expresionR -> expresionR IGUALIGUAL . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    PARIZQ          shift and go to state 107
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresionR                     shift and go to state 111
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 69

    (52) expresionR -> expresionR NOIGUAL . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    PARIZQ          shift and go to state 107
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresionR                     shift and go to state 112
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 70

    (25) asignacion -> TipoVarible ID . asingArray IGUAL expresionL Final
    (29) asingArray -> . asingArray PARIZQ ENTERO PARDER
    (30) asingArray -> . empty
    (73) empty -> .

    IGUAL           reduce using rule 73 (empty -> .)
    PARIZQ          reduce using rule 73 (empty -> .)

    asingArray                     shift and go to state 113
    empty                          shift and go to state 74

state 71

    (26) asignacion -> ID asingArray . IGUAL expresionL Final
    (29) asingArray -> asingArray . PARIZQ ENTERO PARDER

    IGUAL           shift and go to state 114
    PARIZQ          shift and go to state 115


state 72

    (17) callFunc -> ID ParametrosFunc .

    PTCOMA          reduce using rule 17 (callFunc -> ID ParametrosFunc .)


state 73

    (18) ParametrosFunc -> PARIZQ . lstVal PARDER
    (19) ParametrosFunc -> PARIZQ . PARDER
    (20) lstVal -> . lstVal COMA expresionL
    (21) lstVal -> . expresionL
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    PARDER          shift and go to state 117
    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    lstVal                         shift and go to state 116
    expresionL                     shift and go to state 118
    expresionR                     shift and go to state 15
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 74

    (30) asingArray -> empty .

    IGUAL           reduce using rule 30 (asingArray -> empty .)
    PARIZQ          reduce using rule 30 (asingArray -> empty .)


state 75

    (11) DecFunc -> RFUNCTION ID . PARIZQ Parametros PARDER block REND
    (12) DecFunc -> RFUNCTION ID . PARIZQ PARDER block REND

    PARIZQ          shift and go to state 119


state 76

    (56) expresion -> expresion MAS . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 84
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresion                      shift and go to state 120
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 77

    (57) expresion -> expresion MENOS . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 84
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresion                      shift and go to state 121
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 78

    (58) expresion -> expresion DIVIDIDO . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 84
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresion                      shift and go to state 122
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 79

    (59) expresion -> expresion POR . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 84
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresion                      shift and go to state 123
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 80

    (60) expresion -> expresion POW . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 84
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresion                      shift and go to state 124
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 81

    (61) expresion -> expresion MOD . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 84
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresion                      shift and go to state 125
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 82

    (23) whileSt -> RWHILE expresionL . block REND
    (42) expresionL -> expresionL . AND expresionL
    (43) expresionL -> expresionL . OR expresionL
    (24) block -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . impresion PTCOMA
    (5) instruccion -> . expresionL
    (6) instruccion -> . ciclo PTCOMA
    (7) instruccion -> . asignacion PTCOMA
    (8) instruccion -> . DecFunc PTCOMA
    (9) instruccion -> . callFunc PTCOMA
    (10) instruccion -> . empty
    (38) impresion -> . IPRINT PARIZQ val PARDER
    (39) impresion -> . IPRINTLN PARIZQ val PARDER
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (22) ciclo -> . whileSt
    (25) asignacion -> . TipoVarible ID asingArray IGUAL expresionL Final
    (26) asignacion -> . ID asingArray IGUAL expresionL Final
    (11) DecFunc -> . RFUNCTION ID PARIZQ Parametros PARDER block REND
    (12) DecFunc -> . RFUNCTION ID PARIZQ PARDER block REND
    (17) callFunc -> . ID ParametrosFunc
    (73) empty -> .
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (23) whileSt -> . RWHILE expresionL block REND
    (27) TipoVarible -> . RGLOBAL
    (28) TipoVarible -> . RLOCAL
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

  ! shift/reduce conflict for IPRINT resolved as shift
  ! shift/reduce conflict for IPRINTLN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RFUNCTION resolved as shift
  ! shift/reduce conflict for RWHILE resolved as shift
  ! shift/reduce conflict for RGLOBAL resolved as shift
  ! shift/reduce conflict for RLOCAL resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for IUPPERCASE resolved as shift
  ! shift/reduce conflict for ILOWERCASE resolved as shift
  ! shift/reduce conflict for IPARSE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ILOGD resolved as shift
  ! shift/reduce conflict for ILOG resolved as shift
  ! shift/reduce conflict for ISIN resolved as shift
  ! shift/reduce conflict for ICOS resolved as shift
  ! shift/reduce conflict for ITAN resolved as shift
  ! shift/reduce conflict for ISQRT resolved as shift
  ! shift/reduce conflict for RTRUNC resolved as shift
  ! shift/reduce conflict for RTYPEOF resolved as shift
  ! shift/reduce conflict for ISTRING resolved as shift
  ! shift/reduce conflict for RFLOATC resolved as shift
    AND             shift and go to state 51
    OR              shift and go to state 52
    IPRINT          shift and go to state 11
    IPRINTLN        shift and go to state 13
    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    ID              shift and go to state 18
    RFUNCTION       shift and go to state 19
    REND            reduce using rule 73 (empty -> .)
    RWHILE          shift and go to state 22
    RGLOBAL         shift and go to state 23
    RLOCAL          shift and go to state 24
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

  ! IPRINT          [ reduce using rule 73 (empty -> .) ]
  ! IPRINTLN        [ reduce using rule 73 (empty -> .) ]
  ! NOT             [ reduce using rule 73 (empty -> .) ]
  ! PARIZQ          [ reduce using rule 73 (empty -> .) ]
  ! ID              [ reduce using rule 73 (empty -> .) ]
  ! RFUNCTION       [ reduce using rule 73 (empty -> .) ]
  ! RWHILE          [ reduce using rule 73 (empty -> .) ]
  ! RGLOBAL         [ reduce using rule 73 (empty -> .) ]
  ! RLOCAL          [ reduce using rule 73 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 73 (empty -> .) ]
  ! FALSO           [ reduce using rule 73 (empty -> .) ]
  ! MENOS           [ reduce using rule 73 (empty -> .) ]
  ! ENTERO          [ reduce using rule 73 (empty -> .) ]
  ! DECIMAL         [ reduce using rule 73 (empty -> .) ]
  ! CHAR            [ reduce using rule 73 (empty -> .) ]
  ! IUPPERCASE      [ reduce using rule 73 (empty -> .) ]
  ! ILOWERCASE      [ reduce using rule 73 (empty -> .) ]
  ! IPARSE          [ reduce using rule 73 (empty -> .) ]
  ! STRING          [ reduce using rule 73 (empty -> .) ]
  ! ILOGD           [ reduce using rule 73 (empty -> .) ]
  ! ILOG            [ reduce using rule 73 (empty -> .) ]
  ! ISIN            [ reduce using rule 73 (empty -> .) ]
  ! ICOS            [ reduce using rule 73 (empty -> .) ]
  ! ITAN            [ reduce using rule 73 (empty -> .) ]
  ! ISQRT           [ reduce using rule 73 (empty -> .) ]
  ! RTRUNC          [ reduce using rule 73 (empty -> .) ]
  ! RTYPEOF         [ reduce using rule 73 (empty -> .) ]
  ! ISTRING         [ reduce using rule 73 (empty -> .) ]
  ! RFLOATC         [ reduce using rule 73 (empty -> .) ]

    expresionL                     shift and go to state 5
    block                          shift and go to state 126
    instrucciones                  shift and go to state 127
    instruccion                    shift and go to state 3
    impresion                      shift and go to state 4
    ciclo                          shift and go to state 6
    asignacion                     shift and go to state 7
    DecFunc                        shift and go to state 8
    callFunc                       shift and go to state 9
    empty                          shift and go to state 10
    expresionR                     shift and go to state 15
    whileSt                        shift and go to state 16
    TipoVarible                    shift and go to state 17
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 83

    (62) expresion -> MENOS expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . DIVIDIDO expresion
    (59) expresion -> expresion . POR expresion
    (60) expresion -> expresion . POW expresion
    (61) expresion -> expresion . MOD expresion

    MAS             reduce using rule 62 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 62 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 62 (expresion -> MENOS expresion .)
    POR             reduce using rule 62 (expresion -> MENOS expresion .)
    POW             reduce using rule 62 (expresion -> MENOS expresion .)
    MOD             reduce using rule 62 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 62 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 62 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 62 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 62 (expresion -> MENOS expresion .)
    IGUALIGUAL      reduce using rule 62 (expresion -> MENOS expresion .)
    NOIGUAL         reduce using rule 62 (expresion -> MENOS expresion .)
    AND             reduce using rule 62 (expresion -> MENOS expresion .)
    OR              reduce using rule 62 (expresion -> MENOS expresion .)
    IPRINT          reduce using rule 62 (expresion -> MENOS expresion .)
    IPRINTLN        reduce using rule 62 (expresion -> MENOS expresion .)
    NOT             reduce using rule 62 (expresion -> MENOS expresion .)
    PARIZQ          reduce using rule 62 (expresion -> MENOS expresion .)
    ID              reduce using rule 62 (expresion -> MENOS expresion .)
    RFUNCTION       reduce using rule 62 (expresion -> MENOS expresion .)
    RWHILE          reduce using rule 62 (expresion -> MENOS expresion .)
    RGLOBAL         reduce using rule 62 (expresion -> MENOS expresion .)
    RLOCAL          reduce using rule 62 (expresion -> MENOS expresion .)
    VERDADERO       reduce using rule 62 (expresion -> MENOS expresion .)
    FALSO           reduce using rule 62 (expresion -> MENOS expresion .)
    ENTERO          reduce using rule 62 (expresion -> MENOS expresion .)
    DECIMAL         reduce using rule 62 (expresion -> MENOS expresion .)
    CHAR            reduce using rule 62 (expresion -> MENOS expresion .)
    IUPPERCASE      reduce using rule 62 (expresion -> MENOS expresion .)
    ILOWERCASE      reduce using rule 62 (expresion -> MENOS expresion .)
    IPARSE          reduce using rule 62 (expresion -> MENOS expresion .)
    STRING          reduce using rule 62 (expresion -> MENOS expresion .)
    ILOGD           reduce using rule 62 (expresion -> MENOS expresion .)
    ILOG            reduce using rule 62 (expresion -> MENOS expresion .)
    ISIN            reduce using rule 62 (expresion -> MENOS expresion .)
    ICOS            reduce using rule 62 (expresion -> MENOS expresion .)
    ITAN            reduce using rule 62 (expresion -> MENOS expresion .)
    ISQRT           reduce using rule 62 (expresion -> MENOS expresion .)
    RTRUNC          reduce using rule 62 (expresion -> MENOS expresion .)
    RTYPEOF         reduce using rule 62 (expresion -> MENOS expresion .)
    ISTRING         reduce using rule 62 (expresion -> MENOS expresion .)
    RFLOATC         reduce using rule 62 (expresion -> MENOS expresion .)
    $end            reduce using rule 62 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 62 (expresion -> MENOS expresion .)
    REND            reduce using rule 62 (expresion -> MENOS expresion .)
    COMA            reduce using rule 62 (expresion -> MENOS expresion .)
    FPTS            reduce using rule 62 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 62 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 76 ]
  ! MENOS           [ shift and go to state 77 ]
  ! DIVIDIDO        [ shift and go to state 78 ]
  ! POR             [ shift and go to state 79 ]
  ! POW             [ shift and go to state 80 ]
  ! MOD             [ shift and go to state 81 ]


state 84

    (63) expresion -> PARIZQ . expresion PARDER
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 84
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresion                      shift and go to state 128
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 85

    (86) cadena -> IUPPERCASE PARIZQ . expresion PARDER
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 84
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresion                      shift and go to state 129
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 86

    (87) cadena -> ILOWERCASE PARIZQ . expresion PARDER
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 84
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresion                      shift and go to state 130
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 87

    (88) cadena -> IPARSE PARIZQ . ISTRING COMA expresionL PARDER
    (81) casteo -> IPARSE PARIZQ . Tipo COMA expresionL PARDER
    (33) Tipo -> . RINT
    (34) Tipo -> . RFLOAT
    (35) Tipo -> . RBOOL
    (36) Tipo -> . RCHAR
    (37) Tipo -> . RSTRING

    ISTRING         shift and go to state 131
    RINT            shift and go to state 133
    RFLOAT          shift and go to state 134
    RBOOL           shift and go to state 135
    RCHAR           shift and go to state 136
    RSTRING         shift and go to state 137

    Tipo                           shift and go to state 132

state 88

    (84) casteo -> ISTRING PARIZQ . expresionL PARDER
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresionL                     shift and go to state 138
    expresionR                     shift and go to state 15
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 89

    (74) nativas -> ILOGD PARIZQ . expresion PARDER
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 84
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresion                      shift and go to state 139
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 90

    (75) nativas -> ILOG PARIZQ . expresion COMA expresion PARDER
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 84
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresion                      shift and go to state 140
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 91

    (76) nativas -> ISIN PARIZQ . expresion PARDER
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 84
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresion                      shift and go to state 141
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 92

    (77) nativas -> ICOS PARIZQ . expresion PARDER
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 84
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresion                      shift and go to state 142
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 93

    (78) nativas -> ITAN PARIZQ . expresion PARDER
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 84
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresion                      shift and go to state 143
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 94

    (79) nativas -> ISQRT PARIZQ . expresion PARDER
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 84
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresion                      shift and go to state 144
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 95

    (82) casteo -> RTRUNC PARIZQ . RINT COMA expresionL PARDER

    RINT            shift and go to state 145


state 96

    (83) casteo -> RTYPEOF PARIZQ . expresionL PARDER
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresionL                     shift and go to state 146
    expresionR                     shift and go to state 15
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 97

    (85) casteo -> RFLOATC PARIZQ . expresionL PARDER
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresionL                     shift and go to state 147
    expresionR                     shift and go to state 15
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 98

    (42) expresionL -> expresionL AND expresionL .
    (42) expresionL -> expresionL . AND expresionL
    (43) expresionL -> expresionL . OR expresionL

    AND             reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    OR              reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    IPRINT          reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    IPRINTLN        reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    NOT             reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    PARIZQ          reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    ID              reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    RFUNCTION       reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    RWHILE          reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    RGLOBAL         reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    RLOCAL          reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    VERDADERO       reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    FALSO           reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    MENOS           reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    ENTERO          reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    DECIMAL         reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    CHAR            reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    IUPPERCASE      reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    ILOWERCASE      reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    IPARSE          reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    STRING          reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    ILOGD           reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    ILOG            reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    ISIN            reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    ICOS            reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    ITAN            reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    ISQRT           reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    RTRUNC          reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    RTYPEOF         reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    ISTRING         reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    RFLOATC         reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    $end            reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    PARDER          reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    REND            reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    COMA            reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    FPTS            reduce using rule 42 (expresionL -> expresionL AND expresionL .)
    PTCOMA          reduce using rule 42 (expresionL -> expresionL AND expresionL .)

  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 99

    (43) expresionL -> expresionL OR expresionL .
    (42) expresionL -> expresionL . AND expresionL
    (43) expresionL -> expresionL . OR expresionL

    OR              reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    IPRINT          reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    IPRINTLN        reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    NOT             reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    PARIZQ          reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    ID              reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    RFUNCTION       reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    RWHILE          reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    RGLOBAL         reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    RLOCAL          reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    VERDADERO       reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    FALSO           reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    MENOS           reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    ENTERO          reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    DECIMAL         reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    CHAR            reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    IUPPERCASE      reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    ILOWERCASE      reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    IPARSE          reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    STRING          reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    ILOGD           reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    ILOG            reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    ISIN            reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    ICOS            reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    ITAN            reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    ISQRT           reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    RTRUNC          reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    RTYPEOF         reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    ISTRING         reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    RFLOATC         reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    $end            reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    PARDER          reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    REND            reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    COMA            reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    FPTS            reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    PTCOMA          reduce using rule 43 (expresionL -> expresionL OR expresionL .)
    AND             shift and go to state 51

  ! AND             [ reduce using rule 43 (expresionL -> expresionL OR expresionL .) ]
  ! OR              [ shift and go to state 52 ]


state 100

    (38) impresion -> IPRINT PARIZQ val . PARDER
    (40) val -> val . COMA val

    PARDER          shift and go to state 148
    COMA            shift and go to state 149


state 101

    (41) val -> expresionL .
    (42) expresionL -> expresionL . AND expresionL
    (43) expresionL -> expresionL . OR expresionL

    PARDER          reduce using rule 41 (val -> expresionL .)
    COMA            reduce using rule 41 (val -> expresionL .)
    AND             shift and go to state 51
    OR              shift and go to state 52


state 102

    (45) expresionL -> PARIZQ expresionL PARDER .

    AND             reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    OR              reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    IPRINT          reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    IPRINTLN        reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    NOT             reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    PARIZQ          reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    ID              reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    RFUNCTION       reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    RWHILE          reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    RGLOBAL         reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    RLOCAL          reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    VERDADERO       reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    FALSO           reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    MENOS           reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    ENTERO          reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    DECIMAL         reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    CHAR            reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    IUPPERCASE      reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    ILOWERCASE      reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    IPARSE          reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    STRING          reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    ILOGD           reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    ILOG            reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    ISIN            reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    ICOS            reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    ITAN            reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    ISQRT           reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    RTRUNC          reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    RTYPEOF         reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    ISTRING         reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    RFLOATC         reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    $end            reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    PARDER          reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    REND            reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    COMA            reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    FPTS            reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)
    PTCOMA          reduce using rule 45 (expresionL -> PARIZQ expresionL PARDER .)


state 103

    (53) expresionR -> PARIZQ expresionR PARDER .

    MAYOR           reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    MENOR           reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    MAYORIGUAL      reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    MENORIGUAL      reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    IGUALIGUAL      reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    NOIGUAL         reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    AND             reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    OR              reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    IPRINT          reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    IPRINTLN        reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    NOT             reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    PARIZQ          reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    ID              reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    RFUNCTION       reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    RWHILE          reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    RGLOBAL         reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    RLOCAL          reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    VERDADERO       reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    FALSO           reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    MENOS           reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    ENTERO          reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    DECIMAL         reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    CHAR            reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    IUPPERCASE      reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    ILOWERCASE      reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    IPARSE          reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    STRING          reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    ILOGD           reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    ILOG            reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    ISIN            reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    ICOS            reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    ITAN            reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    ISQRT           reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    RTRUNC          reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    RTYPEOF         reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    ISTRING         reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    RFLOATC         reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    $end            reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    PARDER          reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    REND            reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    COMA            reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    FPTS            reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)
    PTCOMA          reduce using rule 53 (expresionR -> PARIZQ expresionR PARDER .)


state 104

    (63) expresion -> PARIZQ expresion PARDER .

    MAS             reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    POW             reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    MOD             reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    MENOR           reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    NOIGUAL         reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    IPRINT          reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    IPRINTLN        reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    NOT             reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    ID              reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    RFUNCTION       reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    RWHILE          reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    RGLOBAL         reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    RLOCAL          reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    VERDADERO       reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    FALSO           reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    CHAR            reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    IUPPERCASE      reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    ILOWERCASE      reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    IPARSE          reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    STRING          reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    ILOGD           reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    ILOG            reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    ISIN            reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    ICOS            reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    ITAN            reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    ISQRT           reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    RTRUNC          reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    RTYPEOF         reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    ISTRING         reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    RFLOATC         reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    $end            reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    REND            reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    FPTS            reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 63 (expresion -> PARIZQ expresion PARDER .)


state 105

    (39) impresion -> IPRINTLN PARIZQ val . PARDER
    (40) val -> val . COMA val

    PARDER          shift and go to state 150
    COMA            shift and go to state 149


state 106

    (47) expresionR -> expresionR MAYOR expresionR .
    (47) expresionR -> expresionR . MAYOR expresionR
    (48) expresionR -> expresionR . MENOR expresionR
    (49) expresionR -> expresionR . MAYORIGUAL expresionR
    (50) expresionR -> expresionR . MENORIGUAL expresionR
    (51) expresionR -> expresionR . IGUALIGUAL expresionR
    (52) expresionR -> expresionR . NOIGUAL expresionR

    MAYOR           reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    MENOR           reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    MAYORIGUAL      reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    MENORIGUAL      reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    AND             reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    OR              reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    IPRINT          reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    IPRINTLN        reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    NOT             reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    PARIZQ          reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    ID              reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    RFUNCTION       reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    RWHILE          reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    RGLOBAL         reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    RLOCAL          reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    VERDADERO       reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    FALSO           reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    MENOS           reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    ENTERO          reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    DECIMAL         reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    CHAR            reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    IUPPERCASE      reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    ILOWERCASE      reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    IPARSE          reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    STRING          reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    ILOGD           reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    ILOG            reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    ISIN            reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    ICOS            reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    ITAN            reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    ISQRT           reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    RTRUNC          reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    RTYPEOF         reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    ISTRING         reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    RFLOATC         reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    $end            reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    PARDER          reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    REND            reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    COMA            reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    FPTS            reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    PTCOMA          reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .)
    IGUALIGUAL      shift and go to state 68
    NOIGUAL         shift and go to state 69

  ! IGUALIGUAL      [ reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .) ]
  ! NOIGUAL         [ reduce using rule 47 (expresionR -> expresionR MAYOR expresionR .) ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORIGUAL      [ shift and go to state 67 ]


state 107

    (53) expresionR -> PARIZQ . expresionR PARDER
    (63) expresion -> PARIZQ . expresion PARDER
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    PARIZQ          shift and go to state 107
    MENOS           shift and go to state 27
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresionR                     shift and go to state 151
    expresion                      shift and go to state 60
    booleano                       shift and go to state 20
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 108

    (48) expresionR -> expresionR MENOR expresionR .
    (47) expresionR -> expresionR . MAYOR expresionR
    (48) expresionR -> expresionR . MENOR expresionR
    (49) expresionR -> expresionR . MAYORIGUAL expresionR
    (50) expresionR -> expresionR . MENORIGUAL expresionR
    (51) expresionR -> expresionR . IGUALIGUAL expresionR
    (52) expresionR -> expresionR . NOIGUAL expresionR

    MAYOR           reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    MENOR           reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    MAYORIGUAL      reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    MENORIGUAL      reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    AND             reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    OR              reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    IPRINT          reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    IPRINTLN        reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    NOT             reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    PARIZQ          reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    ID              reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    RFUNCTION       reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    RWHILE          reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    RGLOBAL         reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    RLOCAL          reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    VERDADERO       reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    FALSO           reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    MENOS           reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    ENTERO          reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    DECIMAL         reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    CHAR            reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    IUPPERCASE      reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    ILOWERCASE      reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    IPARSE          reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    STRING          reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    ILOGD           reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    ILOG            reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    ISIN            reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    ICOS            reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    ITAN            reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    ISQRT           reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    RTRUNC          reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    RTYPEOF         reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    ISTRING         reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    RFLOATC         reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    $end            reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    PARDER          reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    REND            reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    COMA            reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    FPTS            reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    PTCOMA          reduce using rule 48 (expresionR -> expresionR MENOR expresionR .)
    IGUALIGUAL      shift and go to state 68
    NOIGUAL         shift and go to state 69

  ! IGUALIGUAL      [ reduce using rule 48 (expresionR -> expresionR MENOR expresionR .) ]
  ! NOIGUAL         [ reduce using rule 48 (expresionR -> expresionR MENOR expresionR .) ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORIGUAL      [ shift and go to state 67 ]


state 109

    (49) expresionR -> expresionR MAYORIGUAL expresionR .
    (47) expresionR -> expresionR . MAYOR expresionR
    (48) expresionR -> expresionR . MENOR expresionR
    (49) expresionR -> expresionR . MAYORIGUAL expresionR
    (50) expresionR -> expresionR . MENORIGUAL expresionR
    (51) expresionR -> expresionR . IGUALIGUAL expresionR
    (52) expresionR -> expresionR . NOIGUAL expresionR

    MAYOR           reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    MENOR           reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    MAYORIGUAL      reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    MENORIGUAL      reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    AND             reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    OR              reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    IPRINT          reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    IPRINTLN        reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    NOT             reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    PARIZQ          reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    ID              reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    RFUNCTION       reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    RWHILE          reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    RGLOBAL         reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    RLOCAL          reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    VERDADERO       reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    FALSO           reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    MENOS           reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    ENTERO          reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    DECIMAL         reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    CHAR            reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    IUPPERCASE      reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    ILOWERCASE      reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    IPARSE          reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    STRING          reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    ILOGD           reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    ILOG            reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    ISIN            reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    ICOS            reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    ITAN            reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    ISQRT           reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    RTRUNC          reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    RTYPEOF         reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    ISTRING         reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    RFLOATC         reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    $end            reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    PARDER          reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    REND            reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    COMA            reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    FPTS            reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    PTCOMA          reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .)
    IGUALIGUAL      shift and go to state 68
    NOIGUAL         shift and go to state 69

  ! IGUALIGUAL      [ reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .) ]
  ! NOIGUAL         [ reduce using rule 49 (expresionR -> expresionR MAYORIGUAL expresionR .) ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORIGUAL      [ shift and go to state 67 ]


state 110

    (50) expresionR -> expresionR MENORIGUAL expresionR .
    (47) expresionR -> expresionR . MAYOR expresionR
    (48) expresionR -> expresionR . MENOR expresionR
    (49) expresionR -> expresionR . MAYORIGUAL expresionR
    (50) expresionR -> expresionR . MENORIGUAL expresionR
    (51) expresionR -> expresionR . IGUALIGUAL expresionR
    (52) expresionR -> expresionR . NOIGUAL expresionR

    MAYOR           reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    MENOR           reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    MAYORIGUAL      reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    MENORIGUAL      reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    AND             reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    OR              reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    IPRINT          reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    IPRINTLN        reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    NOT             reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    PARIZQ          reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    ID              reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    RFUNCTION       reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    RWHILE          reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    RGLOBAL         reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    RLOCAL          reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    VERDADERO       reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    FALSO           reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    MENOS           reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    ENTERO          reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    DECIMAL         reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    CHAR            reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    IUPPERCASE      reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    ILOWERCASE      reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    IPARSE          reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    STRING          reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    ILOGD           reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    ILOG            reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    ISIN            reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    ICOS            reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    ITAN            reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    ISQRT           reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    RTRUNC          reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    RTYPEOF         reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    ISTRING         reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    RFLOATC         reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    $end            reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    PARDER          reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    REND            reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    COMA            reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    FPTS            reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    PTCOMA          reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .)
    IGUALIGUAL      shift and go to state 68
    NOIGUAL         shift and go to state 69

  ! IGUALIGUAL      [ reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .) ]
  ! NOIGUAL         [ reduce using rule 50 (expresionR -> expresionR MENORIGUAL expresionR .) ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORIGUAL      [ shift and go to state 67 ]


state 111

    (51) expresionR -> expresionR IGUALIGUAL expresionR .
    (47) expresionR -> expresionR . MAYOR expresionR
    (48) expresionR -> expresionR . MENOR expresionR
    (49) expresionR -> expresionR . MAYORIGUAL expresionR
    (50) expresionR -> expresionR . MENORIGUAL expresionR
    (51) expresionR -> expresionR . IGUALIGUAL expresionR
    (52) expresionR -> expresionR . NOIGUAL expresionR

    MAYOR           reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    MENOR           reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    MAYORIGUAL      reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    MENORIGUAL      reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    IGUALIGUAL      reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    NOIGUAL         reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    AND             reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    OR              reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    IPRINT          reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    IPRINTLN        reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    NOT             reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    PARIZQ          reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    ID              reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    RFUNCTION       reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    RWHILE          reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    RGLOBAL         reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    RLOCAL          reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    VERDADERO       reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    FALSO           reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    MENOS           reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    ENTERO          reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    DECIMAL         reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    CHAR            reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    IUPPERCASE      reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    ILOWERCASE      reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    IPARSE          reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    STRING          reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    ILOGD           reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    ILOG            reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    ISIN            reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    ICOS            reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    ITAN            reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    ISQRT           reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    RTRUNC          reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    RTYPEOF         reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    ISTRING         reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    RFLOATC         reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    $end            reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    PARDER          reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    REND            reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    COMA            reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    FPTS            reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)
    PTCOMA          reduce using rule 51 (expresionR -> expresionR IGUALIGUAL expresionR .)

  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORIGUAL      [ shift and go to state 67 ]
  ! IGUALIGUAL      [ shift and go to state 68 ]
  ! NOIGUAL         [ shift and go to state 69 ]


state 112

    (52) expresionR -> expresionR NOIGUAL expresionR .
    (47) expresionR -> expresionR . MAYOR expresionR
    (48) expresionR -> expresionR . MENOR expresionR
    (49) expresionR -> expresionR . MAYORIGUAL expresionR
    (50) expresionR -> expresionR . MENORIGUAL expresionR
    (51) expresionR -> expresionR . IGUALIGUAL expresionR
    (52) expresionR -> expresionR . NOIGUAL expresionR

    MAYOR           reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    MENOR           reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    MAYORIGUAL      reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    MENORIGUAL      reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    IGUALIGUAL      reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    NOIGUAL         reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    AND             reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    OR              reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    IPRINT          reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    IPRINTLN        reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    NOT             reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    PARIZQ          reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    ID              reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    RFUNCTION       reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    RWHILE          reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    RGLOBAL         reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    RLOCAL          reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    VERDADERO       reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    FALSO           reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    MENOS           reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    ENTERO          reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    DECIMAL         reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    CHAR            reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    IUPPERCASE      reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    ILOWERCASE      reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    IPARSE          reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    STRING          reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    ILOGD           reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    ILOG            reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    ISIN            reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    ICOS            reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    ITAN            reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    ISQRT           reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    RTRUNC          reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    RTYPEOF         reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    ISTRING         reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    RFLOATC         reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    $end            reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    PARDER          reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    REND            reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    COMA            reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    FPTS            reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)
    PTCOMA          reduce using rule 52 (expresionR -> expresionR NOIGUAL expresionR .)

  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORIGUAL      [ shift and go to state 67 ]
  ! IGUALIGUAL      [ shift and go to state 68 ]
  ! NOIGUAL         [ shift and go to state 69 ]


state 113

    (25) asignacion -> TipoVarible ID asingArray . IGUAL expresionL Final
    (29) asingArray -> asingArray . PARIZQ ENTERO PARDER

    IGUAL           shift and go to state 152
    PARIZQ          shift and go to state 115


state 114

    (26) asignacion -> ID asingArray IGUAL . expresionL Final
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresionL                     shift and go to state 153
    expresionR                     shift and go to state 15
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 115

    (29) asingArray -> asingArray PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 154


state 116

    (18) ParametrosFunc -> PARIZQ lstVal . PARDER
    (20) lstVal -> lstVal . COMA expresionL

    PARDER          shift and go to state 155
    COMA            shift and go to state 156


state 117

    (19) ParametrosFunc -> PARIZQ PARDER .

    PTCOMA          reduce using rule 19 (ParametrosFunc -> PARIZQ PARDER .)


state 118

    (21) lstVal -> expresionL .
    (42) expresionL -> expresionL . AND expresionL
    (43) expresionL -> expresionL . OR expresionL

    PARDER          reduce using rule 21 (lstVal -> expresionL .)
    COMA            reduce using rule 21 (lstVal -> expresionL .)
    AND             shift and go to state 51
    OR              shift and go to state 52


state 119

    (11) DecFunc -> RFUNCTION ID PARIZQ . Parametros PARDER block REND
    (12) DecFunc -> RFUNCTION ID PARIZQ . PARDER block REND
    (13) Parametros -> . Parametros COMA Parametro
    (14) Parametros -> . Parametro
    (15) Parametro -> . ID FPTS Tipo
    (16) Parametro -> . ID

    PARDER          shift and go to state 159
    ID              shift and go to state 157

    Parametros                     shift and go to state 158
    Parametro                      shift and go to state 160

state 120

    (56) expresion -> expresion MAS expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . DIVIDIDO expresion
    (59) expresion -> expresion . POR expresion
    (60) expresion -> expresion . POW expresion
    (61) expresion -> expresion . MOD expresion

    MAS             reduce using rule 56 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 56 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 56 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 56 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 56 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 56 (expresion -> expresion MAS expresion .)
    IGUALIGUAL      reduce using rule 56 (expresion -> expresion MAS expresion .)
    NOIGUAL         reduce using rule 56 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 56 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 56 (expresion -> expresion MAS expresion .)
    IPRINT          reduce using rule 56 (expresion -> expresion MAS expresion .)
    IPRINTLN        reduce using rule 56 (expresion -> expresion MAS expresion .)
    NOT             reduce using rule 56 (expresion -> expresion MAS expresion .)
    PARIZQ          reduce using rule 56 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 56 (expresion -> expresion MAS expresion .)
    RFUNCTION       reduce using rule 56 (expresion -> expresion MAS expresion .)
    RWHILE          reduce using rule 56 (expresion -> expresion MAS expresion .)
    RGLOBAL         reduce using rule 56 (expresion -> expresion MAS expresion .)
    RLOCAL          reduce using rule 56 (expresion -> expresion MAS expresion .)
    VERDADERO       reduce using rule 56 (expresion -> expresion MAS expresion .)
    FALSO           reduce using rule 56 (expresion -> expresion MAS expresion .)
    ENTERO          reduce using rule 56 (expresion -> expresion MAS expresion .)
    DECIMAL         reduce using rule 56 (expresion -> expresion MAS expresion .)
    CHAR            reduce using rule 56 (expresion -> expresion MAS expresion .)
    IUPPERCASE      reduce using rule 56 (expresion -> expresion MAS expresion .)
    ILOWERCASE      reduce using rule 56 (expresion -> expresion MAS expresion .)
    IPARSE          reduce using rule 56 (expresion -> expresion MAS expresion .)
    STRING          reduce using rule 56 (expresion -> expresion MAS expresion .)
    ILOGD           reduce using rule 56 (expresion -> expresion MAS expresion .)
    ILOG            reduce using rule 56 (expresion -> expresion MAS expresion .)
    ISIN            reduce using rule 56 (expresion -> expresion MAS expresion .)
    ICOS            reduce using rule 56 (expresion -> expresion MAS expresion .)
    ITAN            reduce using rule 56 (expresion -> expresion MAS expresion .)
    ISQRT           reduce using rule 56 (expresion -> expresion MAS expresion .)
    RTRUNC          reduce using rule 56 (expresion -> expresion MAS expresion .)
    RTYPEOF         reduce using rule 56 (expresion -> expresion MAS expresion .)
    ISTRING         reduce using rule 56 (expresion -> expresion MAS expresion .)
    RFLOATC         reduce using rule 56 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 56 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 56 (expresion -> expresion MAS expresion .)
    REND            reduce using rule 56 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 56 (expresion -> expresion MAS expresion .)
    FPTS            reduce using rule 56 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 56 (expresion -> expresion MAS expresion .)
    DIVIDIDO        shift and go to state 78
    POR             shift and go to state 79
    POW             shift and go to state 80
    MOD             shift and go to state 81

  ! DIVIDIDO        [ reduce using rule 56 (expresion -> expresion MAS expresion .) ]
  ! POR             [ reduce using rule 56 (expresion -> expresion MAS expresion .) ]
  ! POW             [ reduce using rule 56 (expresion -> expresion MAS expresion .) ]
  ! MOD             [ reduce using rule 56 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 76 ]
  ! MENOS           [ shift and go to state 77 ]


state 121

    (57) expresion -> expresion MENOS expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . DIVIDIDO expresion
    (59) expresion -> expresion . POR expresion
    (60) expresion -> expresion . POW expresion
    (61) expresion -> expresion . MOD expresion

    MAS             reduce using rule 57 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 57 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 57 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 57 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 57 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 57 (expresion -> expresion MENOS expresion .)
    IGUALIGUAL      reduce using rule 57 (expresion -> expresion MENOS expresion .)
    NOIGUAL         reduce using rule 57 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 57 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 57 (expresion -> expresion MENOS expresion .)
    IPRINT          reduce using rule 57 (expresion -> expresion MENOS expresion .)
    IPRINTLN        reduce using rule 57 (expresion -> expresion MENOS expresion .)
    NOT             reduce using rule 57 (expresion -> expresion MENOS expresion .)
    PARIZQ          reduce using rule 57 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 57 (expresion -> expresion MENOS expresion .)
    RFUNCTION       reduce using rule 57 (expresion -> expresion MENOS expresion .)
    RWHILE          reduce using rule 57 (expresion -> expresion MENOS expresion .)
    RGLOBAL         reduce using rule 57 (expresion -> expresion MENOS expresion .)
    RLOCAL          reduce using rule 57 (expresion -> expresion MENOS expresion .)
    VERDADERO       reduce using rule 57 (expresion -> expresion MENOS expresion .)
    FALSO           reduce using rule 57 (expresion -> expresion MENOS expresion .)
    ENTERO          reduce using rule 57 (expresion -> expresion MENOS expresion .)
    DECIMAL         reduce using rule 57 (expresion -> expresion MENOS expresion .)
    CHAR            reduce using rule 57 (expresion -> expresion MENOS expresion .)
    IUPPERCASE      reduce using rule 57 (expresion -> expresion MENOS expresion .)
    ILOWERCASE      reduce using rule 57 (expresion -> expresion MENOS expresion .)
    IPARSE          reduce using rule 57 (expresion -> expresion MENOS expresion .)
    STRING          reduce using rule 57 (expresion -> expresion MENOS expresion .)
    ILOGD           reduce using rule 57 (expresion -> expresion MENOS expresion .)
    ILOG            reduce using rule 57 (expresion -> expresion MENOS expresion .)
    ISIN            reduce using rule 57 (expresion -> expresion MENOS expresion .)
    ICOS            reduce using rule 57 (expresion -> expresion MENOS expresion .)
    ITAN            reduce using rule 57 (expresion -> expresion MENOS expresion .)
    ISQRT           reduce using rule 57 (expresion -> expresion MENOS expresion .)
    RTRUNC          reduce using rule 57 (expresion -> expresion MENOS expresion .)
    RTYPEOF         reduce using rule 57 (expresion -> expresion MENOS expresion .)
    ISTRING         reduce using rule 57 (expresion -> expresion MENOS expresion .)
    RFLOATC         reduce using rule 57 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 57 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 57 (expresion -> expresion MENOS expresion .)
    REND            reduce using rule 57 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 57 (expresion -> expresion MENOS expresion .)
    FPTS            reduce using rule 57 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 57 (expresion -> expresion MENOS expresion .)
    DIVIDIDO        shift and go to state 78
    POR             shift and go to state 79
    POW             shift and go to state 80
    MOD             shift and go to state 81

  ! DIVIDIDO        [ reduce using rule 57 (expresion -> expresion MENOS expresion .) ]
  ! POR             [ reduce using rule 57 (expresion -> expresion MENOS expresion .) ]
  ! POW             [ reduce using rule 57 (expresion -> expresion MENOS expresion .) ]
  ! MOD             [ reduce using rule 57 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 76 ]
  ! MENOS           [ shift and go to state 77 ]


state 122

    (58) expresion -> expresion DIVIDIDO expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . DIVIDIDO expresion
    (59) expresion -> expresion . POR expresion
    (60) expresion -> expresion . POW expresion
    (61) expresion -> expresion . MOD expresion

    MAS             reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    MAYOR           reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    MENOR           reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIGUAL      reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    MENORIGUAL      reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    IGUALIGUAL      reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    NOIGUAL         reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    IPRINT          reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    IPRINTLN        reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    NOT             reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    PARIZQ          reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    ID              reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    RFUNCTION       reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    RWHILE          reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    RGLOBAL         reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    RLOCAL          reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    VERDADERO       reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    FALSO           reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    ENTERO          reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    DECIMAL         reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    CHAR            reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    IUPPERCASE      reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    ILOWERCASE      reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    IPARSE          reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    STRING          reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    ILOGD           reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    ILOG            reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    ISIN            reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    ICOS            reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    ITAN            reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    ISQRT           reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    RTRUNC          reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    RTYPEOF         reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    ISTRING         reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    RFLOATC         reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    $end            reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    REND            reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    FPTS            reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .)
    POW             shift and go to state 80
    MOD             shift and go to state 81

  ! POW             [ reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MOD             [ reduce using rule 58 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MAS             [ shift and go to state 76 ]
  ! MENOS           [ shift and go to state 77 ]
  ! DIVIDIDO        [ shift and go to state 78 ]
  ! POR             [ shift and go to state 79 ]


state 123

    (59) expresion -> expresion POR expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . DIVIDIDO expresion
    (59) expresion -> expresion . POR expresion
    (60) expresion -> expresion . POW expresion
    (61) expresion -> expresion . MOD expresion

    MAS             reduce using rule 59 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 59 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 59 (expresion -> expresion POR expresion .)
    POR             reduce using rule 59 (expresion -> expresion POR expresion .)
    MAYOR           reduce using rule 59 (expresion -> expresion POR expresion .)
    MENOR           reduce using rule 59 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 59 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 59 (expresion -> expresion POR expresion .)
    IGUALIGUAL      reduce using rule 59 (expresion -> expresion POR expresion .)
    NOIGUAL         reduce using rule 59 (expresion -> expresion POR expresion .)
    AND             reduce using rule 59 (expresion -> expresion POR expresion .)
    OR              reduce using rule 59 (expresion -> expresion POR expresion .)
    IPRINT          reduce using rule 59 (expresion -> expresion POR expresion .)
    IPRINTLN        reduce using rule 59 (expresion -> expresion POR expresion .)
    NOT             reduce using rule 59 (expresion -> expresion POR expresion .)
    PARIZQ          reduce using rule 59 (expresion -> expresion POR expresion .)
    ID              reduce using rule 59 (expresion -> expresion POR expresion .)
    RFUNCTION       reduce using rule 59 (expresion -> expresion POR expresion .)
    RWHILE          reduce using rule 59 (expresion -> expresion POR expresion .)
    RGLOBAL         reduce using rule 59 (expresion -> expresion POR expresion .)
    RLOCAL          reduce using rule 59 (expresion -> expresion POR expresion .)
    VERDADERO       reduce using rule 59 (expresion -> expresion POR expresion .)
    FALSO           reduce using rule 59 (expresion -> expresion POR expresion .)
    ENTERO          reduce using rule 59 (expresion -> expresion POR expresion .)
    DECIMAL         reduce using rule 59 (expresion -> expresion POR expresion .)
    CHAR            reduce using rule 59 (expresion -> expresion POR expresion .)
    IUPPERCASE      reduce using rule 59 (expresion -> expresion POR expresion .)
    ILOWERCASE      reduce using rule 59 (expresion -> expresion POR expresion .)
    IPARSE          reduce using rule 59 (expresion -> expresion POR expresion .)
    STRING          reduce using rule 59 (expresion -> expresion POR expresion .)
    ILOGD           reduce using rule 59 (expresion -> expresion POR expresion .)
    ILOG            reduce using rule 59 (expresion -> expresion POR expresion .)
    ISIN            reduce using rule 59 (expresion -> expresion POR expresion .)
    ICOS            reduce using rule 59 (expresion -> expresion POR expresion .)
    ITAN            reduce using rule 59 (expresion -> expresion POR expresion .)
    ISQRT           reduce using rule 59 (expresion -> expresion POR expresion .)
    RTRUNC          reduce using rule 59 (expresion -> expresion POR expresion .)
    RTYPEOF         reduce using rule 59 (expresion -> expresion POR expresion .)
    ISTRING         reduce using rule 59 (expresion -> expresion POR expresion .)
    RFLOATC         reduce using rule 59 (expresion -> expresion POR expresion .)
    $end            reduce using rule 59 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 59 (expresion -> expresion POR expresion .)
    REND            reduce using rule 59 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 59 (expresion -> expresion POR expresion .)
    FPTS            reduce using rule 59 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 59 (expresion -> expresion POR expresion .)
    POW             shift and go to state 80
    MOD             shift and go to state 81

  ! POW             [ reduce using rule 59 (expresion -> expresion POR expresion .) ]
  ! MOD             [ reduce using rule 59 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 76 ]
  ! MENOS           [ shift and go to state 77 ]
  ! DIVIDIDO        [ shift and go to state 78 ]
  ! POR             [ shift and go to state 79 ]


state 124

    (60) expresion -> expresion POW expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . DIVIDIDO expresion
    (59) expresion -> expresion . POR expresion
    (60) expresion -> expresion . POW expresion
    (61) expresion -> expresion . MOD expresion

    MAS             reduce using rule 60 (expresion -> expresion POW expresion .)
    MENOS           reduce using rule 60 (expresion -> expresion POW expresion .)
    DIVIDIDO        reduce using rule 60 (expresion -> expresion POW expresion .)
    POR             reduce using rule 60 (expresion -> expresion POW expresion .)
    POW             reduce using rule 60 (expresion -> expresion POW expresion .)
    MOD             reduce using rule 60 (expresion -> expresion POW expresion .)
    MAYOR           reduce using rule 60 (expresion -> expresion POW expresion .)
    MENOR           reduce using rule 60 (expresion -> expresion POW expresion .)
    MAYORIGUAL      reduce using rule 60 (expresion -> expresion POW expresion .)
    MENORIGUAL      reduce using rule 60 (expresion -> expresion POW expresion .)
    IGUALIGUAL      reduce using rule 60 (expresion -> expresion POW expresion .)
    NOIGUAL         reduce using rule 60 (expresion -> expresion POW expresion .)
    AND             reduce using rule 60 (expresion -> expresion POW expresion .)
    OR              reduce using rule 60 (expresion -> expresion POW expresion .)
    IPRINT          reduce using rule 60 (expresion -> expresion POW expresion .)
    IPRINTLN        reduce using rule 60 (expresion -> expresion POW expresion .)
    NOT             reduce using rule 60 (expresion -> expresion POW expresion .)
    PARIZQ          reduce using rule 60 (expresion -> expresion POW expresion .)
    ID              reduce using rule 60 (expresion -> expresion POW expresion .)
    RFUNCTION       reduce using rule 60 (expresion -> expresion POW expresion .)
    RWHILE          reduce using rule 60 (expresion -> expresion POW expresion .)
    RGLOBAL         reduce using rule 60 (expresion -> expresion POW expresion .)
    RLOCAL          reduce using rule 60 (expresion -> expresion POW expresion .)
    VERDADERO       reduce using rule 60 (expresion -> expresion POW expresion .)
    FALSO           reduce using rule 60 (expresion -> expresion POW expresion .)
    ENTERO          reduce using rule 60 (expresion -> expresion POW expresion .)
    DECIMAL         reduce using rule 60 (expresion -> expresion POW expresion .)
    CHAR            reduce using rule 60 (expresion -> expresion POW expresion .)
    IUPPERCASE      reduce using rule 60 (expresion -> expresion POW expresion .)
    ILOWERCASE      reduce using rule 60 (expresion -> expresion POW expresion .)
    IPARSE          reduce using rule 60 (expresion -> expresion POW expresion .)
    STRING          reduce using rule 60 (expresion -> expresion POW expresion .)
    ILOGD           reduce using rule 60 (expresion -> expresion POW expresion .)
    ILOG            reduce using rule 60 (expresion -> expresion POW expresion .)
    ISIN            reduce using rule 60 (expresion -> expresion POW expresion .)
    ICOS            reduce using rule 60 (expresion -> expresion POW expresion .)
    ITAN            reduce using rule 60 (expresion -> expresion POW expresion .)
    ISQRT           reduce using rule 60 (expresion -> expresion POW expresion .)
    RTRUNC          reduce using rule 60 (expresion -> expresion POW expresion .)
    RTYPEOF         reduce using rule 60 (expresion -> expresion POW expresion .)
    ISTRING         reduce using rule 60 (expresion -> expresion POW expresion .)
    RFLOATC         reduce using rule 60 (expresion -> expresion POW expresion .)
    $end            reduce using rule 60 (expresion -> expresion POW expresion .)
    PARDER          reduce using rule 60 (expresion -> expresion POW expresion .)
    REND            reduce using rule 60 (expresion -> expresion POW expresion .)
    COMA            reduce using rule 60 (expresion -> expresion POW expresion .)
    FPTS            reduce using rule 60 (expresion -> expresion POW expresion .)
    PTCOMA          reduce using rule 60 (expresion -> expresion POW expresion .)

  ! MAS             [ shift and go to state 76 ]
  ! MENOS           [ shift and go to state 77 ]
  ! DIVIDIDO        [ shift and go to state 78 ]
  ! POR             [ shift and go to state 79 ]
  ! POW             [ shift and go to state 80 ]
  ! MOD             [ shift and go to state 81 ]


state 125

    (61) expresion -> expresion MOD expresion .
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . DIVIDIDO expresion
    (59) expresion -> expresion . POR expresion
    (60) expresion -> expresion . POW expresion
    (61) expresion -> expresion . MOD expresion

    MAS             reduce using rule 61 (expresion -> expresion MOD expresion .)
    MENOS           reduce using rule 61 (expresion -> expresion MOD expresion .)
    DIVIDIDO        reduce using rule 61 (expresion -> expresion MOD expresion .)
    POR             reduce using rule 61 (expresion -> expresion MOD expresion .)
    POW             reduce using rule 61 (expresion -> expresion MOD expresion .)
    MOD             reduce using rule 61 (expresion -> expresion MOD expresion .)
    MAYOR           reduce using rule 61 (expresion -> expresion MOD expresion .)
    MENOR           reduce using rule 61 (expresion -> expresion MOD expresion .)
    MAYORIGUAL      reduce using rule 61 (expresion -> expresion MOD expresion .)
    MENORIGUAL      reduce using rule 61 (expresion -> expresion MOD expresion .)
    IGUALIGUAL      reduce using rule 61 (expresion -> expresion MOD expresion .)
    NOIGUAL         reduce using rule 61 (expresion -> expresion MOD expresion .)
    AND             reduce using rule 61 (expresion -> expresion MOD expresion .)
    OR              reduce using rule 61 (expresion -> expresion MOD expresion .)
    IPRINT          reduce using rule 61 (expresion -> expresion MOD expresion .)
    IPRINTLN        reduce using rule 61 (expresion -> expresion MOD expresion .)
    NOT             reduce using rule 61 (expresion -> expresion MOD expresion .)
    PARIZQ          reduce using rule 61 (expresion -> expresion MOD expresion .)
    ID              reduce using rule 61 (expresion -> expresion MOD expresion .)
    RFUNCTION       reduce using rule 61 (expresion -> expresion MOD expresion .)
    RWHILE          reduce using rule 61 (expresion -> expresion MOD expresion .)
    RGLOBAL         reduce using rule 61 (expresion -> expresion MOD expresion .)
    RLOCAL          reduce using rule 61 (expresion -> expresion MOD expresion .)
    VERDADERO       reduce using rule 61 (expresion -> expresion MOD expresion .)
    FALSO           reduce using rule 61 (expresion -> expresion MOD expresion .)
    ENTERO          reduce using rule 61 (expresion -> expresion MOD expresion .)
    DECIMAL         reduce using rule 61 (expresion -> expresion MOD expresion .)
    CHAR            reduce using rule 61 (expresion -> expresion MOD expresion .)
    IUPPERCASE      reduce using rule 61 (expresion -> expresion MOD expresion .)
    ILOWERCASE      reduce using rule 61 (expresion -> expresion MOD expresion .)
    IPARSE          reduce using rule 61 (expresion -> expresion MOD expresion .)
    STRING          reduce using rule 61 (expresion -> expresion MOD expresion .)
    ILOGD           reduce using rule 61 (expresion -> expresion MOD expresion .)
    ILOG            reduce using rule 61 (expresion -> expresion MOD expresion .)
    ISIN            reduce using rule 61 (expresion -> expresion MOD expresion .)
    ICOS            reduce using rule 61 (expresion -> expresion MOD expresion .)
    ITAN            reduce using rule 61 (expresion -> expresion MOD expresion .)
    ISQRT           reduce using rule 61 (expresion -> expresion MOD expresion .)
    RTRUNC          reduce using rule 61 (expresion -> expresion MOD expresion .)
    RTYPEOF         reduce using rule 61 (expresion -> expresion MOD expresion .)
    ISTRING         reduce using rule 61 (expresion -> expresion MOD expresion .)
    RFLOATC         reduce using rule 61 (expresion -> expresion MOD expresion .)
    $end            reduce using rule 61 (expresion -> expresion MOD expresion .)
    PARDER          reduce using rule 61 (expresion -> expresion MOD expresion .)
    REND            reduce using rule 61 (expresion -> expresion MOD expresion .)
    COMA            reduce using rule 61 (expresion -> expresion MOD expresion .)
    FPTS            reduce using rule 61 (expresion -> expresion MOD expresion .)
    PTCOMA          reduce using rule 61 (expresion -> expresion MOD expresion .)

  ! MAS             [ shift and go to state 76 ]
  ! MENOS           [ shift and go to state 77 ]
  ! DIVIDIDO        [ shift and go to state 78 ]
  ! POR             [ shift and go to state 79 ]
  ! POW             [ shift and go to state 80 ]
  ! MOD             [ shift and go to state 81 ]


state 126

    (23) whileSt -> RWHILE expresionL block . REND

    REND            shift and go to state 161


state 127

    (24) block -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . impresion PTCOMA
    (5) instruccion -> . expresionL
    (6) instruccion -> . ciclo PTCOMA
    (7) instruccion -> . asignacion PTCOMA
    (8) instruccion -> . DecFunc PTCOMA
    (9) instruccion -> . callFunc PTCOMA
    (10) instruccion -> . empty
    (38) impresion -> . IPRINT PARIZQ val PARDER
    (39) impresion -> . IPRINTLN PARIZQ val PARDER
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (22) ciclo -> . whileSt
    (25) asignacion -> . TipoVarible ID asingArray IGUAL expresionL Final
    (26) asignacion -> . ID asingArray IGUAL expresionL Final
    (11) DecFunc -> . RFUNCTION ID PARIZQ Parametros PARDER block REND
    (12) DecFunc -> . RFUNCTION ID PARIZQ PARDER block REND
    (17) callFunc -> . ID ParametrosFunc
    (73) empty -> .
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (23) whileSt -> . RWHILE expresionL block REND
    (27) TipoVarible -> . RGLOBAL
    (28) TipoVarible -> . RLOCAL
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

  ! shift/reduce conflict for IPRINT resolved as shift
  ! shift/reduce conflict for IPRINTLN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RFUNCTION resolved as shift
  ! reduce/reduce conflict for REND resolved using rule 24 (block -> instrucciones .)
  ! shift/reduce conflict for RWHILE resolved as shift
  ! shift/reduce conflict for RGLOBAL resolved as shift
  ! shift/reduce conflict for RLOCAL resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for IUPPERCASE resolved as shift
  ! shift/reduce conflict for ILOWERCASE resolved as shift
  ! shift/reduce conflict for IPARSE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ILOGD resolved as shift
  ! shift/reduce conflict for ILOG resolved as shift
  ! shift/reduce conflict for ISIN resolved as shift
  ! shift/reduce conflict for ICOS resolved as shift
  ! shift/reduce conflict for ITAN resolved as shift
  ! shift/reduce conflict for ISQRT resolved as shift
  ! shift/reduce conflict for RTRUNC resolved as shift
  ! shift/reduce conflict for RTYPEOF resolved as shift
  ! shift/reduce conflict for ISTRING resolved as shift
  ! shift/reduce conflict for RFLOATC resolved as shift
    REND            reduce using rule 24 (block -> instrucciones .)
    IPRINT          shift and go to state 11
    IPRINTLN        shift and go to state 13
    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    ID              shift and go to state 18
    RFUNCTION       shift and go to state 19
    RWHILE          shift and go to state 22
    RGLOBAL         shift and go to state 23
    RLOCAL          shift and go to state 24
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

  ! IPRINT          [ reduce using rule 73 (empty -> .) ]
  ! IPRINTLN        [ reduce using rule 73 (empty -> .) ]
  ! NOT             [ reduce using rule 73 (empty -> .) ]
  ! PARIZQ          [ reduce using rule 73 (empty -> .) ]
  ! ID              [ reduce using rule 73 (empty -> .) ]
  ! RFUNCTION       [ reduce using rule 73 (empty -> .) ]
  ! RWHILE          [ reduce using rule 73 (empty -> .) ]
  ! RGLOBAL         [ reduce using rule 73 (empty -> .) ]
  ! RLOCAL          [ reduce using rule 73 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 73 (empty -> .) ]
  ! FALSO           [ reduce using rule 73 (empty -> .) ]
  ! MENOS           [ reduce using rule 73 (empty -> .) ]
  ! ENTERO          [ reduce using rule 73 (empty -> .) ]
  ! DECIMAL         [ reduce using rule 73 (empty -> .) ]
  ! CHAR            [ reduce using rule 73 (empty -> .) ]
  ! IUPPERCASE      [ reduce using rule 73 (empty -> .) ]
  ! ILOWERCASE      [ reduce using rule 73 (empty -> .) ]
  ! IPARSE          [ reduce using rule 73 (empty -> .) ]
  ! STRING          [ reduce using rule 73 (empty -> .) ]
  ! ILOGD           [ reduce using rule 73 (empty -> .) ]
  ! ILOG            [ reduce using rule 73 (empty -> .) ]
  ! ISIN            [ reduce using rule 73 (empty -> .) ]
  ! ICOS            [ reduce using rule 73 (empty -> .) ]
  ! ITAN            [ reduce using rule 73 (empty -> .) ]
  ! ISQRT           [ reduce using rule 73 (empty -> .) ]
  ! RTRUNC          [ reduce using rule 73 (empty -> .) ]
  ! RTYPEOF         [ reduce using rule 73 (empty -> .) ]
  ! ISTRING         [ reduce using rule 73 (empty -> .) ]
  ! RFLOATC         [ reduce using rule 73 (empty -> .) ]
  ! REND            [ reduce using rule 73 (empty -> .) ]

    instruccion                    shift and go to state 49
    impresion                      shift and go to state 4
    expresionL                     shift and go to state 5
    ciclo                          shift and go to state 6
    asignacion                     shift and go to state 7
    DecFunc                        shift and go to state 8
    callFunc                       shift and go to state 9
    empty                          shift and go to state 10
    expresionR                     shift and go to state 15
    whileSt                        shift and go to state 16
    TipoVarible                    shift and go to state 17
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 128

    (63) expresion -> PARIZQ expresion . PARDER
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . DIVIDIDO expresion
    (59) expresion -> expresion . POR expresion
    (60) expresion -> expresion . POW expresion
    (61) expresion -> expresion . MOD expresion

    PARDER          shift and go to state 104
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    DIVIDIDO        shift and go to state 78
    POR             shift and go to state 79
    POW             shift and go to state 80
    MOD             shift and go to state 81


state 129

    (86) cadena -> IUPPERCASE PARIZQ expresion . PARDER
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . DIVIDIDO expresion
    (59) expresion -> expresion . POR expresion
    (60) expresion -> expresion . POW expresion
    (61) expresion -> expresion . MOD expresion

    PARDER          shift and go to state 162
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    DIVIDIDO        shift and go to state 78
    POR             shift and go to state 79
    POW             shift and go to state 80
    MOD             shift and go to state 81


state 130

    (87) cadena -> ILOWERCASE PARIZQ expresion . PARDER
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . DIVIDIDO expresion
    (59) expresion -> expresion . POR expresion
    (60) expresion -> expresion . POW expresion
    (61) expresion -> expresion . MOD expresion

    PARDER          shift and go to state 163
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    DIVIDIDO        shift and go to state 78
    POR             shift and go to state 79
    POW             shift and go to state 80
    MOD             shift and go to state 81


state 131

    (88) cadena -> IPARSE PARIZQ ISTRING . COMA expresionL PARDER

    COMA            shift and go to state 164


state 132

    (81) casteo -> IPARSE PARIZQ Tipo . COMA expresionL PARDER

    COMA            shift and go to state 165


state 133

    (33) Tipo -> RINT .

    COMA            reduce using rule 33 (Tipo -> RINT .)
    PTCOMA          reduce using rule 33 (Tipo -> RINT .)
    PARDER          reduce using rule 33 (Tipo -> RINT .)


state 134

    (34) Tipo -> RFLOAT .

    COMA            reduce using rule 34 (Tipo -> RFLOAT .)
    PTCOMA          reduce using rule 34 (Tipo -> RFLOAT .)
    PARDER          reduce using rule 34 (Tipo -> RFLOAT .)


state 135

    (35) Tipo -> RBOOL .

    COMA            reduce using rule 35 (Tipo -> RBOOL .)
    PTCOMA          reduce using rule 35 (Tipo -> RBOOL .)
    PARDER          reduce using rule 35 (Tipo -> RBOOL .)


state 136

    (36) Tipo -> RCHAR .

    COMA            reduce using rule 36 (Tipo -> RCHAR .)
    PTCOMA          reduce using rule 36 (Tipo -> RCHAR .)
    PARDER          reduce using rule 36 (Tipo -> RCHAR .)


state 137

    (37) Tipo -> RSTRING .

    COMA            reduce using rule 37 (Tipo -> RSTRING .)
    PTCOMA          reduce using rule 37 (Tipo -> RSTRING .)
    PARDER          reduce using rule 37 (Tipo -> RSTRING .)


state 138

    (84) casteo -> ISTRING PARIZQ expresionL . PARDER
    (42) expresionL -> expresionL . AND expresionL
    (43) expresionL -> expresionL . OR expresionL

    PARDER          shift and go to state 166
    AND             shift and go to state 51
    OR              shift and go to state 52


state 139

    (74) nativas -> ILOGD PARIZQ expresion . PARDER
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . DIVIDIDO expresion
    (59) expresion -> expresion . POR expresion
    (60) expresion -> expresion . POW expresion
    (61) expresion -> expresion . MOD expresion

    PARDER          shift and go to state 167
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    DIVIDIDO        shift and go to state 78
    POR             shift and go to state 79
    POW             shift and go to state 80
    MOD             shift and go to state 81


state 140

    (75) nativas -> ILOG PARIZQ expresion . COMA expresion PARDER
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . DIVIDIDO expresion
    (59) expresion -> expresion . POR expresion
    (60) expresion -> expresion . POW expresion
    (61) expresion -> expresion . MOD expresion

    COMA            shift and go to state 168
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    DIVIDIDO        shift and go to state 78
    POR             shift and go to state 79
    POW             shift and go to state 80
    MOD             shift and go to state 81


state 141

    (76) nativas -> ISIN PARIZQ expresion . PARDER
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . DIVIDIDO expresion
    (59) expresion -> expresion . POR expresion
    (60) expresion -> expresion . POW expresion
    (61) expresion -> expresion . MOD expresion

    PARDER          shift and go to state 169
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    DIVIDIDO        shift and go to state 78
    POR             shift and go to state 79
    POW             shift and go to state 80
    MOD             shift and go to state 81


state 142

    (77) nativas -> ICOS PARIZQ expresion . PARDER
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . DIVIDIDO expresion
    (59) expresion -> expresion . POR expresion
    (60) expresion -> expresion . POW expresion
    (61) expresion -> expresion . MOD expresion

    PARDER          shift and go to state 170
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    DIVIDIDO        shift and go to state 78
    POR             shift and go to state 79
    POW             shift and go to state 80
    MOD             shift and go to state 81


state 143

    (78) nativas -> ITAN PARIZQ expresion . PARDER
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . DIVIDIDO expresion
    (59) expresion -> expresion . POR expresion
    (60) expresion -> expresion . POW expresion
    (61) expresion -> expresion . MOD expresion

    PARDER          shift and go to state 171
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    DIVIDIDO        shift and go to state 78
    POR             shift and go to state 79
    POW             shift and go to state 80
    MOD             shift and go to state 81


state 144

    (79) nativas -> ISQRT PARIZQ expresion . PARDER
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . DIVIDIDO expresion
    (59) expresion -> expresion . POR expresion
    (60) expresion -> expresion . POW expresion
    (61) expresion -> expresion . MOD expresion

    PARDER          shift and go to state 172
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    DIVIDIDO        shift and go to state 78
    POR             shift and go to state 79
    POW             shift and go to state 80
    MOD             shift and go to state 81


state 145

    (82) casteo -> RTRUNC PARIZQ RINT . COMA expresionL PARDER

    COMA            shift and go to state 173


state 146

    (83) casteo -> RTYPEOF PARIZQ expresionL . PARDER
    (42) expresionL -> expresionL . AND expresionL
    (43) expresionL -> expresionL . OR expresionL

    PARDER          shift and go to state 174
    AND             shift and go to state 51
    OR              shift and go to state 52


state 147

    (85) casteo -> RFLOATC PARIZQ expresionL . PARDER
    (42) expresionL -> expresionL . AND expresionL
    (43) expresionL -> expresionL . OR expresionL

    PARDER          shift and go to state 175
    AND             shift and go to state 51
    OR              shift and go to state 52


state 148

    (38) impresion -> IPRINT PARIZQ val PARDER .

    PTCOMA          reduce using rule 38 (impresion -> IPRINT PARIZQ val PARDER .)


state 149

    (40) val -> val COMA . val
    (40) val -> . val COMA val
    (41) val -> . expresionL
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    val                            shift and go to state 176
    expresionL                     shift and go to state 101
    expresionR                     shift and go to state 15
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 150

    (39) impresion -> IPRINTLN PARIZQ val PARDER .

    PTCOMA          reduce using rule 39 (impresion -> IPRINTLN PARIZQ val PARDER .)


state 151

    (53) expresionR -> PARIZQ expresionR . PARDER
    (47) expresionR -> expresionR . MAYOR expresionR
    (48) expresionR -> expresionR . MENOR expresionR
    (49) expresionR -> expresionR . MAYORIGUAL expresionR
    (50) expresionR -> expresionR . MENORIGUAL expresionR
    (51) expresionR -> expresionR . IGUALIGUAL expresionR
    (52) expresionR -> expresionR . NOIGUAL expresionR

    PARDER          shift and go to state 103
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALIGUAL      shift and go to state 68
    NOIGUAL         shift and go to state 69


state 152

    (25) asignacion -> TipoVarible ID asingArray IGUAL . expresionL Final
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresionL                     shift and go to state 177
    expresionR                     shift and go to state 15
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 153

    (26) asignacion -> ID asingArray IGUAL expresionL . Final
    (42) expresionL -> expresionL . AND expresionL
    (43) expresionL -> expresionL . OR expresionL
    (31) Final -> . FPTS Tipo
    (32) Final -> . empty
    (73) empty -> .

    AND             shift and go to state 51
    OR              shift and go to state 52
    FPTS            shift and go to state 179
    PTCOMA          reduce using rule 73 (empty -> .)

    Final                          shift and go to state 178
    empty                          shift and go to state 180

state 154

    (29) asingArray -> asingArray PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 181


state 155

    (18) ParametrosFunc -> PARIZQ lstVal PARDER .

    PTCOMA          reduce using rule 18 (ParametrosFunc -> PARIZQ lstVal PARDER .)


state 156

    (20) lstVal -> lstVal COMA . expresionL
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresionL                     shift and go to state 182
    expresionR                     shift and go to state 15
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 157

    (15) Parametro -> ID . FPTS Tipo
    (16) Parametro -> ID .

    FPTS            shift and go to state 183
    PARDER          reduce using rule 16 (Parametro -> ID .)
    COMA            reduce using rule 16 (Parametro -> ID .)


state 158

    (11) DecFunc -> RFUNCTION ID PARIZQ Parametros . PARDER block REND
    (13) Parametros -> Parametros . COMA Parametro

    PARDER          shift and go to state 184
    COMA            shift and go to state 185


state 159

    (12) DecFunc -> RFUNCTION ID PARIZQ PARDER . block REND
    (24) block -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . impresion PTCOMA
    (5) instruccion -> . expresionL
    (6) instruccion -> . ciclo PTCOMA
    (7) instruccion -> . asignacion PTCOMA
    (8) instruccion -> . DecFunc PTCOMA
    (9) instruccion -> . callFunc PTCOMA
    (10) instruccion -> . empty
    (38) impresion -> . IPRINT PARIZQ val PARDER
    (39) impresion -> . IPRINTLN PARIZQ val PARDER
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (22) ciclo -> . whileSt
    (25) asignacion -> . TipoVarible ID asingArray IGUAL expresionL Final
    (26) asignacion -> . ID asingArray IGUAL expresionL Final
    (11) DecFunc -> . RFUNCTION ID PARIZQ Parametros PARDER block REND
    (12) DecFunc -> . RFUNCTION ID PARIZQ PARDER block REND
    (17) callFunc -> . ID ParametrosFunc
    (73) empty -> .
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (23) whileSt -> . RWHILE expresionL block REND
    (27) TipoVarible -> . RGLOBAL
    (28) TipoVarible -> . RLOCAL
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

  ! shift/reduce conflict for IPRINT resolved as shift
  ! shift/reduce conflict for IPRINTLN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RFUNCTION resolved as shift
  ! shift/reduce conflict for RWHILE resolved as shift
  ! shift/reduce conflict for RGLOBAL resolved as shift
  ! shift/reduce conflict for RLOCAL resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for IUPPERCASE resolved as shift
  ! shift/reduce conflict for ILOWERCASE resolved as shift
  ! shift/reduce conflict for IPARSE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ILOGD resolved as shift
  ! shift/reduce conflict for ILOG resolved as shift
  ! shift/reduce conflict for ISIN resolved as shift
  ! shift/reduce conflict for ICOS resolved as shift
  ! shift/reduce conflict for ITAN resolved as shift
  ! shift/reduce conflict for ISQRT resolved as shift
  ! shift/reduce conflict for RTRUNC resolved as shift
  ! shift/reduce conflict for RTYPEOF resolved as shift
  ! shift/reduce conflict for ISTRING resolved as shift
  ! shift/reduce conflict for RFLOATC resolved as shift
    IPRINT          shift and go to state 11
    IPRINTLN        shift and go to state 13
    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    ID              shift and go to state 18
    RFUNCTION       shift and go to state 19
    REND            reduce using rule 73 (empty -> .)
    RWHILE          shift and go to state 22
    RGLOBAL         shift and go to state 23
    RLOCAL          shift and go to state 24
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

  ! IPRINT          [ reduce using rule 73 (empty -> .) ]
  ! IPRINTLN        [ reduce using rule 73 (empty -> .) ]
  ! NOT             [ reduce using rule 73 (empty -> .) ]
  ! PARIZQ          [ reduce using rule 73 (empty -> .) ]
  ! ID              [ reduce using rule 73 (empty -> .) ]
  ! RFUNCTION       [ reduce using rule 73 (empty -> .) ]
  ! RWHILE          [ reduce using rule 73 (empty -> .) ]
  ! RGLOBAL         [ reduce using rule 73 (empty -> .) ]
  ! RLOCAL          [ reduce using rule 73 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 73 (empty -> .) ]
  ! FALSO           [ reduce using rule 73 (empty -> .) ]
  ! MENOS           [ reduce using rule 73 (empty -> .) ]
  ! ENTERO          [ reduce using rule 73 (empty -> .) ]
  ! DECIMAL         [ reduce using rule 73 (empty -> .) ]
  ! CHAR            [ reduce using rule 73 (empty -> .) ]
  ! IUPPERCASE      [ reduce using rule 73 (empty -> .) ]
  ! ILOWERCASE      [ reduce using rule 73 (empty -> .) ]
  ! IPARSE          [ reduce using rule 73 (empty -> .) ]
  ! STRING          [ reduce using rule 73 (empty -> .) ]
  ! ILOGD           [ reduce using rule 73 (empty -> .) ]
  ! ILOG            [ reduce using rule 73 (empty -> .) ]
  ! ISIN            [ reduce using rule 73 (empty -> .) ]
  ! ICOS            [ reduce using rule 73 (empty -> .) ]
  ! ITAN            [ reduce using rule 73 (empty -> .) ]
  ! ISQRT           [ reduce using rule 73 (empty -> .) ]
  ! RTRUNC          [ reduce using rule 73 (empty -> .) ]
  ! RTYPEOF         [ reduce using rule 73 (empty -> .) ]
  ! ISTRING         [ reduce using rule 73 (empty -> .) ]
  ! RFLOATC         [ reduce using rule 73 (empty -> .) ]

    block                          shift and go to state 186
    instrucciones                  shift and go to state 127
    instruccion                    shift and go to state 3
    impresion                      shift and go to state 4
    expresionL                     shift and go to state 5
    ciclo                          shift and go to state 6
    asignacion                     shift and go to state 7
    DecFunc                        shift and go to state 8
    callFunc                       shift and go to state 9
    empty                          shift and go to state 10
    expresionR                     shift and go to state 15
    whileSt                        shift and go to state 16
    TipoVarible                    shift and go to state 17
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 160

    (14) Parametros -> Parametro .

    PARDER          reduce using rule 14 (Parametros -> Parametro .)
    COMA            reduce using rule 14 (Parametros -> Parametro .)


state 161

    (23) whileSt -> RWHILE expresionL block REND .

    PTCOMA          reduce using rule 23 (whileSt -> RWHILE expresionL block REND .)


state 162

    (86) cadena -> IUPPERCASE PARIZQ expresion PARDER .

    MAS             reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    MENOS           reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    POR             reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    POW             reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    MOD             reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    MENOR           reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    NOIGUAL         reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    AND             reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    OR              reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    IPRINT          reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    IPRINTLN        reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    NOT             reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    ID              reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    RFUNCTION       reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    RWHILE          reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    RGLOBAL         reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    RLOCAL          reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    VERDADERO       reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    FALSO           reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    CHAR            reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    IUPPERCASE      reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    ILOWERCASE      reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    IPARSE          reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    STRING          reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    ILOGD           reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    ILOG            reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    ISIN            reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    ICOS            reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    ITAN            reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    ISQRT           reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    RTRUNC          reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    RTYPEOF         reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    ISTRING         reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    RFLOATC         reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    $end            reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    PARDER          reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    REND            reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    COMA            reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    FPTS            reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 86 (cadena -> IUPPERCASE PARIZQ expresion PARDER .)


state 163

    (87) cadena -> ILOWERCASE PARIZQ expresion PARDER .

    MAS             reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    MENOS           reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    POR             reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    POW             reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    MOD             reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    MENOR           reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    NOIGUAL         reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    AND             reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    OR              reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    IPRINT          reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    IPRINTLN        reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    NOT             reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    ID              reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    RFUNCTION       reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    RWHILE          reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    RGLOBAL         reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    RLOCAL          reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    VERDADERO       reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    FALSO           reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    CHAR            reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    IUPPERCASE      reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    ILOWERCASE      reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    IPARSE          reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    STRING          reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    ILOGD           reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    ILOG            reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    ISIN            reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    ICOS            reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    ITAN            reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    ISQRT           reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    RTRUNC          reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    RTYPEOF         reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    ISTRING         reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    RFLOATC         reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    $end            reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    PARDER          reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    REND            reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    COMA            reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    FPTS            reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 87 (cadena -> ILOWERCASE PARIZQ expresion PARDER .)


state 164

    (88) cadena -> IPARSE PARIZQ ISTRING COMA . expresionL PARDER
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresionL                     shift and go to state 187
    expresionR                     shift and go to state 15
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 165

    (81) casteo -> IPARSE PARIZQ Tipo COMA . expresionL PARDER
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresionL                     shift and go to state 188
    expresionR                     shift and go to state 15
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 166

    (84) casteo -> ISTRING PARIZQ expresionL PARDER .

    MAS             reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    MENOS           reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    DIVIDIDO        reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    POR             reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    POW             reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    MOD             reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    MAYOR           reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    MENOR           reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    MAYORIGUAL      reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    MENORIGUAL      reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    IGUALIGUAL      reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    NOIGUAL         reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    AND             reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    OR              reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    IPRINT          reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    IPRINTLN        reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    NOT             reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    PARIZQ          reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    ID              reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    RFUNCTION       reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    RWHILE          reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    RGLOBAL         reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    RLOCAL          reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    VERDADERO       reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    FALSO           reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    ENTERO          reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    DECIMAL         reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    CHAR            reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    IUPPERCASE      reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    ILOWERCASE      reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    IPARSE          reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    STRING          reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    ILOGD           reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    ILOG            reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    ISIN            reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    ICOS            reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    ITAN            reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    ISQRT           reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    RTRUNC          reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    RTYPEOF         reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    ISTRING         reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    RFLOATC         reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    $end            reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    PARDER          reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    REND            reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    COMA            reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    FPTS            reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)
    PTCOMA          reduce using rule 84 (casteo -> ISTRING PARIZQ expresionL PARDER .)


state 167

    (74) nativas -> ILOGD PARIZQ expresion PARDER .

    MAS             reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    MENOS           reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    POR             reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    POW             reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    MOD             reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    MENOR           reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    NOIGUAL         reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    AND             reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    OR              reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    IPRINT          reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    IPRINTLN        reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    NOT             reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    ID              reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    RFUNCTION       reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    RWHILE          reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    RGLOBAL         reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    RLOCAL          reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    VERDADERO       reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    FALSO           reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    CHAR            reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    IUPPERCASE      reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    ILOWERCASE      reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    IPARSE          reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    STRING          reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    ILOGD           reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    ILOG            reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    ISIN            reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    ICOS            reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    ITAN            reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    ISQRT           reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    RTRUNC          reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    RTYPEOF         reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    ISTRING         reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    RFLOATC         reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    $end            reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    PARDER          reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    REND            reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    COMA            reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    FPTS            reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 74 (nativas -> ILOGD PARIZQ expresion PARDER .)


state 168

    (75) nativas -> ILOG PARIZQ expresion COMA . expresion PARDER
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 84
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresion                      shift and go to state 189
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 169

    (76) nativas -> ISIN PARIZQ expresion PARDER .

    MAS             reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    MENOS           reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    POR             reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    POW             reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    MOD             reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    MENOR           reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    NOIGUAL         reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    AND             reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    OR              reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    IPRINT          reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    IPRINTLN        reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    NOT             reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    ID              reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    RFUNCTION       reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    RWHILE          reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    RGLOBAL         reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    RLOCAL          reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    VERDADERO       reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    FALSO           reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    CHAR            reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    IUPPERCASE      reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    ILOWERCASE      reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    IPARSE          reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    STRING          reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    ILOGD           reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    ILOG            reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    ISIN            reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    ICOS            reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    ITAN            reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    ISQRT           reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    RTRUNC          reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    RTYPEOF         reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    ISTRING         reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    RFLOATC         reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    $end            reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    PARDER          reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    REND            reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    COMA            reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    FPTS            reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 76 (nativas -> ISIN PARIZQ expresion PARDER .)


state 170

    (77) nativas -> ICOS PARIZQ expresion PARDER .

    MAS             reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    MENOS           reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    POR             reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    POW             reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    MOD             reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    MENOR           reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    NOIGUAL         reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    AND             reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    OR              reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    IPRINT          reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    IPRINTLN        reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    NOT             reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    ID              reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    RFUNCTION       reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    RWHILE          reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    RGLOBAL         reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    RLOCAL          reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    VERDADERO       reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    FALSO           reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    CHAR            reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    IUPPERCASE      reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    ILOWERCASE      reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    IPARSE          reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    STRING          reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    ILOGD           reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    ILOG            reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    ISIN            reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    ICOS            reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    ITAN            reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    ISQRT           reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    RTRUNC          reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    RTYPEOF         reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    ISTRING         reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    RFLOATC         reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    $end            reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    PARDER          reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    REND            reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    COMA            reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    FPTS            reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 77 (nativas -> ICOS PARIZQ expresion PARDER .)


state 171

    (78) nativas -> ITAN PARIZQ expresion PARDER .

    MAS             reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    MENOS           reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    POR             reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    POW             reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    MOD             reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    MENOR           reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    NOIGUAL         reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    AND             reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    OR              reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    IPRINT          reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    IPRINTLN        reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    NOT             reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    ID              reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    RFUNCTION       reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    RWHILE          reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    RGLOBAL         reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    RLOCAL          reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    VERDADERO       reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    FALSO           reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    CHAR            reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    IUPPERCASE      reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    ILOWERCASE      reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    IPARSE          reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    STRING          reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    ILOGD           reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    ILOG            reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    ISIN            reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    ICOS            reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    ITAN            reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    ISQRT           reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    RTRUNC          reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    RTYPEOF         reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    ISTRING         reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    RFLOATC         reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    $end            reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    PARDER          reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    REND            reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    COMA            reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    FPTS            reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 78 (nativas -> ITAN PARIZQ expresion PARDER .)


state 172

    (79) nativas -> ISQRT PARIZQ expresion PARDER .

    MAS             reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    POR             reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    POW             reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    MOD             reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    MENOR           reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    NOIGUAL         reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    AND             reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    OR              reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    IPRINT          reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    IPRINTLN        reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    NOT             reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    ID              reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    RFUNCTION       reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    RWHILE          reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    RGLOBAL         reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    RLOCAL          reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    VERDADERO       reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    FALSO           reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    CHAR            reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    IUPPERCASE      reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    ILOWERCASE      reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    IPARSE          reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    STRING          reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    ILOGD           reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    ILOG            reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    ISIN            reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    ICOS            reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    ITAN            reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    ISQRT           reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    RTRUNC          reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    RTYPEOF         reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    ISTRING         reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    RFLOATC         reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    $end            reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    REND            reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    COMA            reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    FPTS            reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 79 (nativas -> ISQRT PARIZQ expresion PARDER .)


state 173

    (82) casteo -> RTRUNC PARIZQ RINT COMA . expresionL PARDER
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    ID              shift and go to state 61
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

    expresionL                     shift and go to state 190
    expresionR                     shift and go to state 15
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 174

    (83) casteo -> RTYPEOF PARIZQ expresionL PARDER .

    MAS             reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    MENOS           reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    DIVIDIDO        reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    POR             reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    POW             reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    MOD             reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    MAYOR           reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    MENOR           reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    MAYORIGUAL      reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    MENORIGUAL      reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    IGUALIGUAL      reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    NOIGUAL         reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    AND             reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    OR              reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    IPRINT          reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    IPRINTLN        reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    NOT             reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    PARIZQ          reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    ID              reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    RFUNCTION       reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    RWHILE          reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    RGLOBAL         reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    RLOCAL          reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    VERDADERO       reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    FALSO           reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    ENTERO          reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    DECIMAL         reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    CHAR            reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    IUPPERCASE      reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    ILOWERCASE      reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    IPARSE          reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    STRING          reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    ILOGD           reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    ILOG            reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    ISIN            reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    ICOS            reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    ITAN            reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    ISQRT           reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    RTRUNC          reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    RTYPEOF         reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    ISTRING         reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    RFLOATC         reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    $end            reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    PARDER          reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    REND            reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    COMA            reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    FPTS            reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)
    PTCOMA          reduce using rule 83 (casteo -> RTYPEOF PARIZQ expresionL PARDER .)


state 175

    (85) casteo -> RFLOATC PARIZQ expresionL PARDER .

    MAS             reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    MENOS           reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    DIVIDIDO        reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    POR             reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    POW             reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    MOD             reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    MAYOR           reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    MENOR           reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    MAYORIGUAL      reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    MENORIGUAL      reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    IGUALIGUAL      reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    NOIGUAL         reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    AND             reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    OR              reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    IPRINT          reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    IPRINTLN        reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    NOT             reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    PARIZQ          reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    ID              reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    RFUNCTION       reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    RWHILE          reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    RGLOBAL         reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    RLOCAL          reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    VERDADERO       reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    FALSO           reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    ENTERO          reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    DECIMAL         reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    CHAR            reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    IUPPERCASE      reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    ILOWERCASE      reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    IPARSE          reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    STRING          reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    ILOGD           reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    ILOG            reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    ISIN            reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    ICOS            reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    ITAN            reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    ISQRT           reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    RTRUNC          reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    RTYPEOF         reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    ISTRING         reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    RFLOATC         reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    $end            reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    PARDER          reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    REND            reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    COMA            reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    FPTS            reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)
    PTCOMA          reduce using rule 85 (casteo -> RFLOATC PARIZQ expresionL PARDER .)


state 176

    (40) val -> val COMA val .
    (40) val -> val . COMA val

  ! shift/reduce conflict for COMA resolved as shift
    PARDER          reduce using rule 40 (val -> val COMA val .)
    COMA            shift and go to state 149

  ! COMA            [ reduce using rule 40 (val -> val COMA val .) ]


state 177

    (25) asignacion -> TipoVarible ID asingArray IGUAL expresionL . Final
    (42) expresionL -> expresionL . AND expresionL
    (43) expresionL -> expresionL . OR expresionL
    (31) Final -> . FPTS Tipo
    (32) Final -> . empty
    (73) empty -> .

    AND             shift and go to state 51
    OR              shift and go to state 52
    FPTS            shift and go to state 179
    PTCOMA          reduce using rule 73 (empty -> .)

    Final                          shift and go to state 191
    empty                          shift and go to state 180

state 178

    (26) asignacion -> ID asingArray IGUAL expresionL Final .

    PTCOMA          reduce using rule 26 (asignacion -> ID asingArray IGUAL expresionL Final .)


state 179

    (31) Final -> FPTS . Tipo
    (33) Tipo -> . RINT
    (34) Tipo -> . RFLOAT
    (35) Tipo -> . RBOOL
    (36) Tipo -> . RCHAR
    (37) Tipo -> . RSTRING

    RINT            shift and go to state 133
    RFLOAT          shift and go to state 134
    RBOOL           shift and go to state 135
    RCHAR           shift and go to state 136
    RSTRING         shift and go to state 137

    Tipo                           shift and go to state 192

state 180

    (32) Final -> empty .

    PTCOMA          reduce using rule 32 (Final -> empty .)


state 181

    (29) asingArray -> asingArray PARIZQ ENTERO PARDER .

    IGUAL           reduce using rule 29 (asingArray -> asingArray PARIZQ ENTERO PARDER .)
    PARIZQ          reduce using rule 29 (asingArray -> asingArray PARIZQ ENTERO PARDER .)


state 182

    (20) lstVal -> lstVal COMA expresionL .
    (42) expresionL -> expresionL . AND expresionL
    (43) expresionL -> expresionL . OR expresionL

    PARDER          reduce using rule 20 (lstVal -> lstVal COMA expresionL .)
    COMA            reduce using rule 20 (lstVal -> lstVal COMA expresionL .)
    AND             shift and go to state 51
    OR              shift and go to state 52


state 183

    (15) Parametro -> ID FPTS . Tipo
    (33) Tipo -> . RINT
    (34) Tipo -> . RFLOAT
    (35) Tipo -> . RBOOL
    (36) Tipo -> . RCHAR
    (37) Tipo -> . RSTRING

    RINT            shift and go to state 133
    RFLOAT          shift and go to state 134
    RBOOL           shift and go to state 135
    RCHAR           shift and go to state 136
    RSTRING         shift and go to state 137

    Tipo                           shift and go to state 193

state 184

    (11) DecFunc -> RFUNCTION ID PARIZQ Parametros PARDER . block REND
    (24) block -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . impresion PTCOMA
    (5) instruccion -> . expresionL
    (6) instruccion -> . ciclo PTCOMA
    (7) instruccion -> . asignacion PTCOMA
    (8) instruccion -> . DecFunc PTCOMA
    (9) instruccion -> . callFunc PTCOMA
    (10) instruccion -> . empty
    (38) impresion -> . IPRINT PARIZQ val PARDER
    (39) impresion -> . IPRINTLN PARIZQ val PARDER
    (42) expresionL -> . expresionL AND expresionL
    (43) expresionL -> . expresionL OR expresionL
    (44) expresionL -> . NOT expresionL
    (45) expresionL -> . PARIZQ expresionL PARDER
    (46) expresionL -> . expresionR
    (22) ciclo -> . whileSt
    (25) asignacion -> . TipoVarible ID asingArray IGUAL expresionL Final
    (26) asignacion -> . ID asingArray IGUAL expresionL Final
    (11) DecFunc -> . RFUNCTION ID PARIZQ Parametros PARDER block REND
    (12) DecFunc -> . RFUNCTION ID PARIZQ PARDER block REND
    (17) callFunc -> . ID ParametrosFunc
    (73) empty -> .
    (47) expresionR -> . expresionR MAYOR expresionR
    (48) expresionR -> . expresionR MENOR expresionR
    (49) expresionR -> . expresionR MAYORIGUAL expresionR
    (50) expresionR -> . expresionR MENORIGUAL expresionR
    (51) expresionR -> . expresionR IGUALIGUAL expresionR
    (52) expresionR -> . expresionR NOIGUAL expresionR
    (53) expresionR -> . PARIZQ expresionR PARDER
    (54) expresionR -> . booleano
    (55) expresionR -> . expresion
    (23) whileSt -> . RWHILE expresionL block REND
    (27) TipoVarible -> . RGLOBAL
    (28) TipoVarible -> . RLOCAL
    (65) booleano -> . VERDADERO
    (66) booleano -> . FALSO
    (56) expresion -> . expresion MAS expresion
    (57) expresion -> . expresion MENOS expresion
    (58) expresion -> . expresion DIVIDIDO expresion
    (59) expresion -> . expresion POR expresion
    (60) expresion -> . expresion POW expresion
    (61) expresion -> . expresion MOD expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . PARIZQ expresion PARDER
    (64) expresion -> . valor
    (67) valor -> . ENTERO
    (68) valor -> . DECIMAL
    (69) valor -> . CHAR
    (70) valor -> . cadena
    (71) valor -> . nativas
    (72) valor -> . ID
    (86) cadena -> . IUPPERCASE PARIZQ expresion PARDER
    (87) cadena -> . ILOWERCASE PARIZQ expresion PARDER
    (88) cadena -> . IPARSE PARIZQ ISTRING COMA expresionL PARDER
    (89) cadena -> . STRING
    (74) nativas -> . ILOGD PARIZQ expresion PARDER
    (75) nativas -> . ILOG PARIZQ expresion COMA expresion PARDER
    (76) nativas -> . ISIN PARIZQ expresion PARDER
    (77) nativas -> . ICOS PARIZQ expresion PARDER
    (78) nativas -> . ITAN PARIZQ expresion PARDER
    (79) nativas -> . ISQRT PARIZQ expresion PARDER
    (80) nativas -> . casteo
    (81) casteo -> . IPARSE PARIZQ Tipo COMA expresionL PARDER
    (82) casteo -> . RTRUNC PARIZQ RINT COMA expresionL PARDER
    (83) casteo -> . RTYPEOF PARIZQ expresionL PARDER
    (84) casteo -> . ISTRING PARIZQ expresionL PARDER
    (85) casteo -> . RFLOATC PARIZQ expresionL PARDER

  ! shift/reduce conflict for IPRINT resolved as shift
  ! shift/reduce conflict for IPRINTLN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RFUNCTION resolved as shift
  ! shift/reduce conflict for RWHILE resolved as shift
  ! shift/reduce conflict for RGLOBAL resolved as shift
  ! shift/reduce conflict for RLOCAL resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for IUPPERCASE resolved as shift
  ! shift/reduce conflict for ILOWERCASE resolved as shift
  ! shift/reduce conflict for IPARSE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ILOGD resolved as shift
  ! shift/reduce conflict for ILOG resolved as shift
  ! shift/reduce conflict for ISIN resolved as shift
  ! shift/reduce conflict for ICOS resolved as shift
  ! shift/reduce conflict for ITAN resolved as shift
  ! shift/reduce conflict for ISQRT resolved as shift
  ! shift/reduce conflict for RTRUNC resolved as shift
  ! shift/reduce conflict for RTYPEOF resolved as shift
  ! shift/reduce conflict for ISTRING resolved as shift
  ! shift/reduce conflict for RFLOATC resolved as shift
    IPRINT          shift and go to state 11
    IPRINTLN        shift and go to state 13
    NOT             shift and go to state 14
    PARIZQ          shift and go to state 12
    ID              shift and go to state 18
    RFUNCTION       shift and go to state 19
    REND            reduce using rule 73 (empty -> .)
    RWHILE          shift and go to state 22
    RGLOBAL         shift and go to state 23
    RLOCAL          shift and go to state 24
    VERDADERO       shift and go to state 25
    FALSO           shift and go to state 26
    MENOS           shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CHAR            shift and go to state 31
    IUPPERCASE      shift and go to state 34
    ILOWERCASE      shift and go to state 35
    IPARSE          shift and go to state 36
    STRING          shift and go to state 38
    ILOGD           shift and go to state 39
    ILOG            shift and go to state 40
    ISIN            shift and go to state 41
    ICOS            shift and go to state 42
    ITAN            shift and go to state 43
    ISQRT           shift and go to state 44
    RTRUNC          shift and go to state 46
    RTYPEOF         shift and go to state 47
    ISTRING         shift and go to state 37
    RFLOATC         shift and go to state 48

  ! IPRINT          [ reduce using rule 73 (empty -> .) ]
  ! IPRINTLN        [ reduce using rule 73 (empty -> .) ]
  ! NOT             [ reduce using rule 73 (empty -> .) ]
  ! PARIZQ          [ reduce using rule 73 (empty -> .) ]
  ! ID              [ reduce using rule 73 (empty -> .) ]
  ! RFUNCTION       [ reduce using rule 73 (empty -> .) ]
  ! RWHILE          [ reduce using rule 73 (empty -> .) ]
  ! RGLOBAL         [ reduce using rule 73 (empty -> .) ]
  ! RLOCAL          [ reduce using rule 73 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 73 (empty -> .) ]
  ! FALSO           [ reduce using rule 73 (empty -> .) ]
  ! MENOS           [ reduce using rule 73 (empty -> .) ]
  ! ENTERO          [ reduce using rule 73 (empty -> .) ]
  ! DECIMAL         [ reduce using rule 73 (empty -> .) ]
  ! CHAR            [ reduce using rule 73 (empty -> .) ]
  ! IUPPERCASE      [ reduce using rule 73 (empty -> .) ]
  ! ILOWERCASE      [ reduce using rule 73 (empty -> .) ]
  ! IPARSE          [ reduce using rule 73 (empty -> .) ]
  ! STRING          [ reduce using rule 73 (empty -> .) ]
  ! ILOGD           [ reduce using rule 73 (empty -> .) ]
  ! ILOG            [ reduce using rule 73 (empty -> .) ]
  ! ISIN            [ reduce using rule 73 (empty -> .) ]
  ! ICOS            [ reduce using rule 73 (empty -> .) ]
  ! ITAN            [ reduce using rule 73 (empty -> .) ]
  ! ISQRT           [ reduce using rule 73 (empty -> .) ]
  ! RTRUNC          [ reduce using rule 73 (empty -> .) ]
  ! RTYPEOF         [ reduce using rule 73 (empty -> .) ]
  ! ISTRING         [ reduce using rule 73 (empty -> .) ]
  ! RFLOATC         [ reduce using rule 73 (empty -> .) ]

    block                          shift and go to state 194
    instrucciones                  shift and go to state 127
    instruccion                    shift and go to state 3
    impresion                      shift and go to state 4
    expresionL                     shift and go to state 5
    ciclo                          shift and go to state 6
    asignacion                     shift and go to state 7
    DecFunc                        shift and go to state 8
    callFunc                       shift and go to state 9
    empty                          shift and go to state 10
    expresionR                     shift and go to state 15
    whileSt                        shift and go to state 16
    TipoVarible                    shift and go to state 17
    booleano                       shift and go to state 20
    expresion                      shift and go to state 21
    valor                          shift and go to state 28
    cadena                         shift and go to state 32
    nativas                        shift and go to state 33
    casteo                         shift and go to state 45

state 185

    (13) Parametros -> Parametros COMA . Parametro
    (15) Parametro -> . ID FPTS Tipo
    (16) Parametro -> . ID

    ID              shift and go to state 157

    Parametro                      shift and go to state 195

state 186

    (12) DecFunc -> RFUNCTION ID PARIZQ PARDER block . REND

    REND            shift and go to state 196


state 187

    (88) cadena -> IPARSE PARIZQ ISTRING COMA expresionL . PARDER
    (42) expresionL -> expresionL . AND expresionL
    (43) expresionL -> expresionL . OR expresionL

    PARDER          shift and go to state 197
    AND             shift and go to state 51
    OR              shift and go to state 52


state 188

    (81) casteo -> IPARSE PARIZQ Tipo COMA expresionL . PARDER
    (42) expresionL -> expresionL . AND expresionL
    (43) expresionL -> expresionL . OR expresionL

    PARDER          shift and go to state 198
    AND             shift and go to state 51
    OR              shift and go to state 52


state 189

    (75) nativas -> ILOG PARIZQ expresion COMA expresion . PARDER
    (56) expresion -> expresion . MAS expresion
    (57) expresion -> expresion . MENOS expresion
    (58) expresion -> expresion . DIVIDIDO expresion
    (59) expresion -> expresion . POR expresion
    (60) expresion -> expresion . POW expresion
    (61) expresion -> expresion . MOD expresion

    PARDER          shift and go to state 199
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    DIVIDIDO        shift and go to state 78
    POR             shift and go to state 79
    POW             shift and go to state 80
    MOD             shift and go to state 81


state 190

    (82) casteo -> RTRUNC PARIZQ RINT COMA expresionL . PARDER
    (42) expresionL -> expresionL . AND expresionL
    (43) expresionL -> expresionL . OR expresionL

    PARDER          shift and go to state 200
    AND             shift and go to state 51
    OR              shift and go to state 52


state 191

    (25) asignacion -> TipoVarible ID asingArray IGUAL expresionL Final .

    PTCOMA          reduce using rule 25 (asignacion -> TipoVarible ID asingArray IGUAL expresionL Final .)


state 192

    (31) Final -> FPTS Tipo .

    PTCOMA          reduce using rule 31 (Final -> FPTS Tipo .)


state 193

    (15) Parametro -> ID FPTS Tipo .

    PARDER          reduce using rule 15 (Parametro -> ID FPTS Tipo .)
    COMA            reduce using rule 15 (Parametro -> ID FPTS Tipo .)


state 194

    (11) DecFunc -> RFUNCTION ID PARIZQ Parametros PARDER block . REND

    REND            shift and go to state 201


state 195

    (13) Parametros -> Parametros COMA Parametro .

    PARDER          reduce using rule 13 (Parametros -> Parametros COMA Parametro .)
    COMA            reduce using rule 13 (Parametros -> Parametros COMA Parametro .)


state 196

    (12) DecFunc -> RFUNCTION ID PARIZQ PARDER block REND .

    PTCOMA          reduce using rule 12 (DecFunc -> RFUNCTION ID PARIZQ PARDER block REND .)


state 197

    (88) cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .

    MAS             reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    MENOS           reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    DIVIDIDO        reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    POR             reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    POW             reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    MOD             reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    MAYOR           reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    MENOR           reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    MAYORIGUAL      reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    MENORIGUAL      reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    IGUALIGUAL      reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    NOIGUAL         reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    AND             reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    OR              reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    IPRINT          reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    IPRINTLN        reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    NOT             reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    PARIZQ          reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    ID              reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    RFUNCTION       reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    RWHILE          reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    RGLOBAL         reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    RLOCAL          reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    VERDADERO       reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    FALSO           reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    ENTERO          reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    DECIMAL         reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    CHAR            reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    IUPPERCASE      reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    ILOWERCASE      reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    IPARSE          reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    STRING          reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    ILOGD           reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    ILOG            reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    ISIN            reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    ICOS            reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    ITAN            reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    ISQRT           reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    RTRUNC          reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    RTYPEOF         reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    ISTRING         reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    RFLOATC         reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    $end            reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    PARDER          reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    REND            reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    COMA            reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    FPTS            reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)
    PTCOMA          reduce using rule 88 (cadena -> IPARSE PARIZQ ISTRING COMA expresionL PARDER .)


state 198

    (81) casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .

    MAS             reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    MENOS           reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    DIVIDIDO        reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    POR             reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    POW             reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    MOD             reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    MAYOR           reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    MENOR           reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    MAYORIGUAL      reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    MENORIGUAL      reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    IGUALIGUAL      reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    NOIGUAL         reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    AND             reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    OR              reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    IPRINT          reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    IPRINTLN        reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    NOT             reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    PARIZQ          reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    ID              reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    RFUNCTION       reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    RWHILE          reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    RGLOBAL         reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    RLOCAL          reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    VERDADERO       reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    FALSO           reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    ENTERO          reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    DECIMAL         reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    CHAR            reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    IUPPERCASE      reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    ILOWERCASE      reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    IPARSE          reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    STRING          reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    ILOGD           reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    ILOG            reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    ISIN            reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    ICOS            reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    ITAN            reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    ISQRT           reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    RTRUNC          reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    RTYPEOF         reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    ISTRING         reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    RFLOATC         reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    $end            reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    PARDER          reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    REND            reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    COMA            reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    FPTS            reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)
    PTCOMA          reduce using rule 81 (casteo -> IPARSE PARIZQ Tipo COMA expresionL PARDER .)


state 199

    (75) nativas -> ILOG PARIZQ expresion COMA expresion PARDER .

    MAS             reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    POW             reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    MOD             reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    MAYOR           reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    MENOR           reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    MAYORIGUAL      reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    MENORIGUAL      reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    IGUALIGUAL      reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    NOIGUAL         reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    IPRINT          reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    IPRINTLN        reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    NOT             reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    PARIZQ          reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    ID              reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    RFUNCTION       reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    RWHILE          reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    RGLOBAL         reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    RLOCAL          reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    VERDADERO       reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    FALSO           reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    ENTERO          reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    DECIMAL         reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    CHAR            reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    IUPPERCASE      reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    ILOWERCASE      reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    IPARSE          reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    STRING          reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    ILOGD           reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    ILOG            reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    ISIN            reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    ICOS            reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    ITAN            reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    ISQRT           reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    RTRUNC          reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    RTYPEOF         reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    ISTRING         reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    RFLOATC         reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    $end            reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    REND            reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    FPTS            reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 75 (nativas -> ILOG PARIZQ expresion COMA expresion PARDER .)


state 200

    (82) casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .

    MAS             reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    MENOS           reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    DIVIDIDO        reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    POR             reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    POW             reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    MOD             reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    MAYOR           reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    MENOR           reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    MAYORIGUAL      reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    MENORIGUAL      reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    IGUALIGUAL      reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    NOIGUAL         reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    AND             reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    OR              reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    IPRINT          reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    IPRINTLN        reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    NOT             reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    PARIZQ          reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    ID              reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    RFUNCTION       reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    RWHILE          reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    RGLOBAL         reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    RLOCAL          reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    VERDADERO       reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    FALSO           reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    ENTERO          reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    DECIMAL         reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    CHAR            reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    IUPPERCASE      reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    ILOWERCASE      reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    IPARSE          reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    STRING          reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    ILOGD           reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    ILOG            reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    ISIN            reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    ICOS            reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    ITAN            reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    ISQRT           reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    RTRUNC          reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    RTYPEOF         reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    ISTRING         reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    RFLOATC         reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    $end            reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    PARDER          reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    REND            reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    COMA            reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    FPTS            reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)
    PTCOMA          reduce using rule 82 (casteo -> RTRUNC PARIZQ RINT COMA expresionL PARDER .)


state 201

    (11) DecFunc -> RFUNCTION ID PARIZQ Parametros PARDER block REND .

    PTCOMA          reduce using rule 11 (DecFunc -> RFUNCTION ID PARIZQ Parametros PARDER block REND .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IPRINT in state 0 resolved as shift
WARNING: shift/reduce conflict for IPRINTLN in state 0 resolved as shift
WARNING: shift/reduce conflict for NOT in state 0 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 0 resolved as shift
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for RFUNCTION in state 0 resolved as shift
WARNING: shift/reduce conflict for RWHILE in state 0 resolved as shift
WARNING: shift/reduce conflict for RGLOBAL in state 0 resolved as shift
WARNING: shift/reduce conflict for RLOCAL in state 0 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 0 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 0 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 0 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 0 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 0 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 0 resolved as shift
WARNING: shift/reduce conflict for IUPPERCASE in state 0 resolved as shift
WARNING: shift/reduce conflict for ILOWERCASE in state 0 resolved as shift
WARNING: shift/reduce conflict for IPARSE in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for ILOGD in state 0 resolved as shift
WARNING: shift/reduce conflict for ILOG in state 0 resolved as shift
WARNING: shift/reduce conflict for ISIN in state 0 resolved as shift
WARNING: shift/reduce conflict for ICOS in state 0 resolved as shift
WARNING: shift/reduce conflict for ITAN in state 0 resolved as shift
WARNING: shift/reduce conflict for ISQRT in state 0 resolved as shift
WARNING: shift/reduce conflict for RTRUNC in state 0 resolved as shift
WARNING: shift/reduce conflict for RTYPEOF in state 0 resolved as shift
WARNING: shift/reduce conflict for ISTRING in state 0 resolved as shift
WARNING: shift/reduce conflict for RFLOATC in state 0 resolved as shift
WARNING: shift/reduce conflict for IPRINT in state 2 resolved as shift
WARNING: shift/reduce conflict for IPRINTLN in state 2 resolved as shift
WARNING: shift/reduce conflict for NOT in state 2 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for RFUNCTION in state 2 resolved as shift
WARNING: shift/reduce conflict for RWHILE in state 2 resolved as shift
WARNING: shift/reduce conflict for RGLOBAL in state 2 resolved as shift
WARNING: shift/reduce conflict for RLOCAL in state 2 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 2 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 2 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 2 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 2 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 2 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 2 resolved as shift
WARNING: shift/reduce conflict for IUPPERCASE in state 2 resolved as shift
WARNING: shift/reduce conflict for ILOWERCASE in state 2 resolved as shift
WARNING: shift/reduce conflict for IPARSE in state 2 resolved as shift
WARNING: shift/reduce conflict for STRING in state 2 resolved as shift
WARNING: shift/reduce conflict for ILOGD in state 2 resolved as shift
WARNING: shift/reduce conflict for ILOG in state 2 resolved as shift
WARNING: shift/reduce conflict for ISIN in state 2 resolved as shift
WARNING: shift/reduce conflict for ICOS in state 2 resolved as shift
WARNING: shift/reduce conflict for ITAN in state 2 resolved as shift
WARNING: shift/reduce conflict for ISQRT in state 2 resolved as shift
WARNING: shift/reduce conflict for RTRUNC in state 2 resolved as shift
WARNING: shift/reduce conflict for RTYPEOF in state 2 resolved as shift
WARNING: shift/reduce conflict for ISTRING in state 2 resolved as shift
WARNING: shift/reduce conflict for RFLOATC in state 2 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 18 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 18 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 21 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 59 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 60 resolved as shift
WARNING: shift/reduce conflict for IPRINT in state 82 resolved as shift
WARNING: shift/reduce conflict for IPRINTLN in state 82 resolved as shift
WARNING: shift/reduce conflict for NOT in state 82 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 82 resolved as shift
WARNING: shift/reduce conflict for ID in state 82 resolved as shift
WARNING: shift/reduce conflict for RFUNCTION in state 82 resolved as shift
WARNING: shift/reduce conflict for RWHILE in state 82 resolved as shift
WARNING: shift/reduce conflict for RGLOBAL in state 82 resolved as shift
WARNING: shift/reduce conflict for RLOCAL in state 82 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 82 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 82 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 82 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 82 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 82 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 82 resolved as shift
WARNING: shift/reduce conflict for IUPPERCASE in state 82 resolved as shift
WARNING: shift/reduce conflict for ILOWERCASE in state 82 resolved as shift
WARNING: shift/reduce conflict for IPARSE in state 82 resolved as shift
WARNING: shift/reduce conflict for STRING in state 82 resolved as shift
WARNING: shift/reduce conflict for ILOGD in state 82 resolved as shift
WARNING: shift/reduce conflict for ILOG in state 82 resolved as shift
WARNING: shift/reduce conflict for ISIN in state 82 resolved as shift
WARNING: shift/reduce conflict for ICOS in state 82 resolved as shift
WARNING: shift/reduce conflict for ITAN in state 82 resolved as shift
WARNING: shift/reduce conflict for ISQRT in state 82 resolved as shift
WARNING: shift/reduce conflict for RTRUNC in state 82 resolved as shift
WARNING: shift/reduce conflict for RTYPEOF in state 82 resolved as shift
WARNING: shift/reduce conflict for ISTRING in state 82 resolved as shift
WARNING: shift/reduce conflict for RFLOATC in state 82 resolved as shift
WARNING: shift/reduce conflict for IPRINT in state 127 resolved as shift
WARNING: shift/reduce conflict for IPRINTLN in state 127 resolved as shift
WARNING: shift/reduce conflict for NOT in state 127 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 127 resolved as shift
WARNING: shift/reduce conflict for ID in state 127 resolved as shift
WARNING: shift/reduce conflict for RFUNCTION in state 127 resolved as shift
WARNING: shift/reduce conflict for RWHILE in state 127 resolved as shift
WARNING: shift/reduce conflict for RGLOBAL in state 127 resolved as shift
WARNING: shift/reduce conflict for RLOCAL in state 127 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 127 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 127 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 127 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 127 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 127 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 127 resolved as shift
WARNING: shift/reduce conflict for IUPPERCASE in state 127 resolved as shift
WARNING: shift/reduce conflict for ILOWERCASE in state 127 resolved as shift
WARNING: shift/reduce conflict for IPARSE in state 127 resolved as shift
WARNING: shift/reduce conflict for STRING in state 127 resolved as shift
WARNING: shift/reduce conflict for ILOGD in state 127 resolved as shift
WARNING: shift/reduce conflict for ILOG in state 127 resolved as shift
WARNING: shift/reduce conflict for ISIN in state 127 resolved as shift
WARNING: shift/reduce conflict for ICOS in state 127 resolved as shift
WARNING: shift/reduce conflict for ITAN in state 127 resolved as shift
WARNING: shift/reduce conflict for ISQRT in state 127 resolved as shift
WARNING: shift/reduce conflict for RTRUNC in state 127 resolved as shift
WARNING: shift/reduce conflict for RTYPEOF in state 127 resolved as shift
WARNING: shift/reduce conflict for ISTRING in state 127 resolved as shift
WARNING: shift/reduce conflict for RFLOATC in state 127 resolved as shift
WARNING: shift/reduce conflict for IPRINT in state 159 resolved as shift
WARNING: shift/reduce conflict for IPRINTLN in state 159 resolved as shift
WARNING: shift/reduce conflict for NOT in state 159 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 159 resolved as shift
WARNING: shift/reduce conflict for ID in state 159 resolved as shift
WARNING: shift/reduce conflict for RFUNCTION in state 159 resolved as shift
WARNING: shift/reduce conflict for RWHILE in state 159 resolved as shift
WARNING: shift/reduce conflict for RGLOBAL in state 159 resolved as shift
WARNING: shift/reduce conflict for RLOCAL in state 159 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 159 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 159 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 159 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 159 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 159 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 159 resolved as shift
WARNING: shift/reduce conflict for IUPPERCASE in state 159 resolved as shift
WARNING: shift/reduce conflict for ILOWERCASE in state 159 resolved as shift
WARNING: shift/reduce conflict for IPARSE in state 159 resolved as shift
WARNING: shift/reduce conflict for STRING in state 159 resolved as shift
WARNING: shift/reduce conflict for ILOGD in state 159 resolved as shift
WARNING: shift/reduce conflict for ILOG in state 159 resolved as shift
WARNING: shift/reduce conflict for ISIN in state 159 resolved as shift
WARNING: shift/reduce conflict for ICOS in state 159 resolved as shift
WARNING: shift/reduce conflict for ITAN in state 159 resolved as shift
WARNING: shift/reduce conflict for ISQRT in state 159 resolved as shift
WARNING: shift/reduce conflict for RTRUNC in state 159 resolved as shift
WARNING: shift/reduce conflict for RTYPEOF in state 159 resolved as shift
WARNING: shift/reduce conflict for ISTRING in state 159 resolved as shift
WARNING: shift/reduce conflict for RFLOATC in state 159 resolved as shift
WARNING: shift/reduce conflict for COMA in state 176 resolved as shift
WARNING: shift/reduce conflict for IPRINT in state 184 resolved as shift
WARNING: shift/reduce conflict for IPRINTLN in state 184 resolved as shift
WARNING: shift/reduce conflict for NOT in state 184 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 184 resolved as shift
WARNING: shift/reduce conflict for ID in state 184 resolved as shift
WARNING: shift/reduce conflict for RFUNCTION in state 184 resolved as shift
WARNING: shift/reduce conflict for RWHILE in state 184 resolved as shift
WARNING: shift/reduce conflict for RGLOBAL in state 184 resolved as shift
WARNING: shift/reduce conflict for RLOCAL in state 184 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 184 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 184 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 184 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 184 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 184 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 184 resolved as shift
WARNING: shift/reduce conflict for IUPPERCASE in state 184 resolved as shift
WARNING: shift/reduce conflict for ILOWERCASE in state 184 resolved as shift
WARNING: shift/reduce conflict for IPARSE in state 184 resolved as shift
WARNING: shift/reduce conflict for STRING in state 184 resolved as shift
WARNING: shift/reduce conflict for ILOGD in state 184 resolved as shift
WARNING: shift/reduce conflict for ILOG in state 184 resolved as shift
WARNING: shift/reduce conflict for ISIN in state 184 resolved as shift
WARNING: shift/reduce conflict for ICOS in state 184 resolved as shift
WARNING: shift/reduce conflict for ITAN in state 184 resolved as shift
WARNING: shift/reduce conflict for ISQRT in state 184 resolved as shift
WARNING: shift/reduce conflict for RTRUNC in state 184 resolved as shift
WARNING: shift/reduce conflict for RTYPEOF in state 184 resolved as shift
WARNING: shift/reduce conflict for ISTRING in state 184 resolved as shift
WARNING: shift/reduce conflict for RFLOATC in state 184 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (initial -> instrucciones)
WARNING: rejected rule (empty -> <empty>) in state 2
WARNING: reduce/reduce conflict in state 127 resolved using rule (block -> instrucciones)
WARNING: rejected rule (empty -> <empty>) in state 127
